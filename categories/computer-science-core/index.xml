<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>computer-science-core on Ye Zheng&#39;s Blog</title>
    <link>http://www.yezheng.pro/categories/computer-science-core/</link>
    <description>Recent content in computer-science-core on Ye Zheng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://www.yezheng.pro/categories/computer-science-core/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode</title>
      <link>http://www.yezheng.pro/post/computer-science-core/algorithms/leetcode/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.yezheng.pro/post/computer-science-core/algorithms/leetcode/</guid>
      <description>LeetCode最常考察 1 Two Sum 2 Add Two Numbers 3 Longest Substring Without Repeating Characters 8 String to Integer (atoi) 15 3Sum 19 Remove Nth Node From End of List 21 Merge Two Sorted Lists 23 Merge k Sorted Lists 25 Reverse Nodes in k-Group 33 Search in Rotated Sorted Array 34 Search for a Range 42 Trapping Rain Water</description>
    </item>
    
    <item>
      <title>Data structures and algorithms use</title>
      <link>http://www.yezheng.pro/post/computer-science-core/algorithms/data-structures-and-algorithms-use/</link>
      <pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.yezheng.pro/post/computer-science-core/algorithms/data-structures-and-algorithms-use/</guid>
      <description>AVL树 最早的平衡二叉树之一。应用相对其他数据结构比较少。windows对进程地址空间的管理用到了AVL树。 红黑树 平衡二叉树，广泛用在C++</description>
    </item>
    
    <item>
      <title>Divide and Conquer, Sorting and Searching, and Randomized Algorithms</title>
      <link>http://www.yezheng.pro/post/computer-science-core/algorithms/algorithms-divide-conquer-sorting-searching-randomized/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.yezheng.pro/post/computer-science-core/algorithms/algorithms-divide-conquer-sorting-searching-randomized/</guid>
      <description>Insertion Sort Insertion Sort: Pseudocode INSERTION-SORT(A) for j = 2 to A.length key = A[j] // Insert A[j] into the sorted sequence A[1..j-1]. i = j - 1 while i &amp;gt; 0 and A[j] &amp;gt; key A[i+1] = A[i] i = i - 1 A[i + 1] = key Insertion Sort: Complexity analysis insertion sort has a best-case running time of $$\theta{(n)}$$ (pronounced “theta of n”).
insertion sort has an average and worst-case running time of $$\theta{(n^2)}$$ (pronounced “theta of n-squared”).</description>
    </item>
    
  </channel>
</rss>
