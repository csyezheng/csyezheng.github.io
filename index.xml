<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ye Zheng&#39;s Blog</title>
    <link>http://csyezheng.github.io/</link>
    <description>Recent content on Ye Zheng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 Oct 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://csyezheng.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://csyezheng.github.io/about/</link>
      <pubDate>Mon, 25 Sep 2017 21:38:52 +0800</pubDate>
      
      <guid>http://csyezheng.github.io/about/</guid>
      
        <description>&lt;p&gt;I&amp;rsquo;m graduated from the Hebei GEO University with a degree in marketing, because I thought computers were cool from an early age, so I chose programmers as my future employment direction in my third year of college. In the third year of college, I learned some front-end knowledge, and in the fourth year of college I learned some C ++ related knowledge. After graduating, I naturally found a job related to programming.&lt;/p&gt;
&lt;p&gt;In the first company, I was mainly engaged in web crawling. I was responsible for scraping various financial data including stock exchanges, performing data cleaning, and completing an announcement classification system during the period. I worked as a data development engineer in the second company, and solved development problems such as real-time data forwarding, reception, and storage. I worked as a back-end development engineer at a third company and built the entire edx-based online learning system.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Introduction to Cloud Infrastructure Technologies</title>
      <link>http://csyezheng.github.io/post/infrastructure/introduction-to-cloud-infrastructure-technologies/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/infrastructure/introduction-to-cloud-infrastructure-technologies/</guid>
      
        <description>&lt;h2 id=&#34;chapter-1-virtualization&#34;&gt;Chapter 1. Virtualization&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-cloud-computing-and-technologies&#34;&gt;Introduction to Cloud Computing and Technologies&lt;/h4&gt;
&lt;p&gt;Historically, the word &lt;strong&gt;cloud&lt;/strong&gt; was used as a metaphor for Internet. Later on, it was used to depict the Internet in computer network diagrams. To find out more about the origin of the cloud, you can take a look at the details provided on &lt;a href=&#34;https://en.wikipedia.org/wiki/Cloud_computing#Origin_of_the_term&#34;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloud computing&lt;/strong&gt; can be referred as the allocation of resources on the cloud. According to &lt;a href=&#34;http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf&#34;&gt;NIST (National Institute of Standard and Technology)&lt;/a&gt;, the formal definition of cloud computing is the following:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Cloud computing is a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Cloud computing providers offer different kinds of services built on top of basic provisioning and releasing of resources. Most of these services fall into one of the following categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Infrastructure as a Service (IaaS)&lt;/li&gt;
&lt;li&gt;Platform as a Service (PaaS)&lt;/li&gt;
&lt;li&gt;Software as a Service (SaaS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will cover these categories and others throughout the course. Most providers use some form of web interface, on top of which we can build the desired stack. Cloud providers use a pay-as-you-go model, in which we pay for the resources we have used in a given duration.&lt;/p&gt;
&lt;h4 id=&#34;key-features-of-cloud-computing&#34;&gt;Key Features of Cloud Computing&lt;/h4&gt;
&lt;p&gt;Cloud computing provides key features such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed and Agility&lt;/strong&gt;
The required resources are just one click away, which saves time and provides agility. We can also easily scale up or down, depending on our need.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cost&lt;/strong&gt;
It reduces the up-front cost to set up the infrastructure, and allows us to focus on applications and business. Cloud providers have features to estimate the cost, which helps us plan better.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easy Access to Resources&lt;/strong&gt;
As users, we can access our infrastructure from any place and device, as long as we can connect to the provider.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintenance&lt;/strong&gt;
All the maintenance work for the resources is done by the provider. As end users, we do not have to worry about this aspect.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-tenancy&lt;/strong&gt;
Multiple users can use the same pool of resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reliability&lt;/strong&gt;
Resources can be hosted in different data center locations, to provide increased reliability.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloud-deployment-models&#34;&gt;Cloud Deployment Models&lt;/h4&gt;
&lt;p&gt;Generally, a cloud is deployed in the following models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Private Cloud&lt;/strong&gt;
It is designated and operated solely for one organization. It can be hosted internally or externally and managed by internal teams or a third party. We can build a private cloud using a software stack like &lt;a href=&#34;https://www.openstack.org/&#34;&gt;OpenStack&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public Cloud&lt;/strong&gt;
It is open to the public and anybody can use it after swiping the credit card. Amazon Web Services and Google Compute Engine are examples of public clouds.&lt;/li&gt;
&lt;li&gt;**Hybrid Cloud
**Public and private clouds are bound together to offer the hybrid cloud. Among other things, a hybrid cloud can be used to:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Store sensitive information on a private cloud, while offering public services based on that information from a public cloud.&lt;/li&gt;
&lt;li&gt;Meet the temporary resources needed from the public cloud. These temporary resources cannot be met from a private cloud.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://courses.edx.org/assets/courseware/v1/6f3bd09c6693af43ba9fe43d0ab1bb58/asset-v1:LinuxFoundationX+LFS151.x+2T2018+type@asset+block/Cloud_computing_types.svg&#34; alt=&#34;Cloud Computing Types&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloud Computing Types&lt;/strong&gt;
(by Sam Johnston, licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt;, retrieved from &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/8/87/Cloud_computing_types.svg&#34;&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&#34;virtualization&#34;&gt;Virtualization&lt;/h4&gt;
&lt;p&gt;According to &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtualization&#34;&gt;Wikipedia&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;In computing, virtualization refers to the act of creating a virtual (rather than actual) version of something, including virtual computer hardware platforms, operating systems, storage devices, and computer resources&amp;rdquo;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Virtualization can be offered on different hardware and software layers, like Central Processing Unit (CPU), disk, memory, filesystems, etc. In this chapter, we will look at some examples of creating virtual machines (VMs) after emulating the different kinds of hardware to install a guest OS on them.&lt;/p&gt;
&lt;p&gt;Virtual machines are created on top of a &lt;strong&gt;hypervisor&lt;/strong&gt;, which runs on top of the host machine&amp;rsquo;s operating system. With hypervisors, we emulate hardware like CPU, disk, network, memory, etc., and install guest machines on it. We can create multiple guest machines with different operating systems on a hypervisor. For example, we can take a Linux machine running on bare metal and, after setting up the hypervisor, we can create multiple guest machines with Linux and Windows operating systems. Some examples of hypervisors are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;KVM&lt;/li&gt;
&lt;li&gt;Xen&lt;/li&gt;
&lt;li&gt;VMWare&lt;/li&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;li&gt;Hyper-V.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can find support for hardware virtualization in all recent CPUs, as it is important to share the host system&amp;rsquo;s processor resources with multiple guest operating systems in a safe and efficient way. Most of the recent CPUs will also support &lt;a href=&#34;https://en.wikipedia.org/wiki/Virtualization#Nested_virtualization&#34;&gt;nested virtualization&lt;/a&gt;, which enables us to have a VM inside a VM.&lt;/p&gt;
&lt;p&gt;Next, let&amp;rsquo;s take a look at a few examples on how to create VMs on top of different hypervisors.&lt;/p&gt;
&lt;h4 id=&#34;learning-objectives&#34;&gt;Learning Objectives&lt;/h4&gt;
&lt;p&gt;By the end of this chapter, you should be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Describe the different types of virtualization.&lt;/li&gt;
&lt;li&gt;Explain how hypervisors can be used to create virtual machines.&lt;/li&gt;
&lt;li&gt;Create and configure virtual machines automatically, using KVM, VirtualBox and Vagrant.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kvm&#34;&gt;KVM&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-kvm&#34;&gt;Introduction to KVM&lt;/h4&gt;
&lt;p&gt;According to &lt;a href=&#34;http://www.linux-kvm.org/&#34;&gt;linux-kvm.org&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;&lt;strong&gt;KVM&lt;/strong&gt; for (Kernel-based Virtual Machine) is a full virtualization solution for Linux on x86 hardware&amp;quot;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It is part of the mainline Linux kernel. It is ported for S/390, PowerPC, IA-64 and ARM as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://courses.edx.org/assets/courseware/v1/5708cd4d223ce4a5313bdeccbc638cc1/asset-v1:LinuxFoundationX+LFS151.x+2T2018+type@asset+block/Kernel-based_Virtual_Machine.svg&#34; alt=&#34;A High-Level Overview of the KVM/QEMU Virtualization Environment&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A High-Level Overview of the KVM/QEMU Virtualization Environment&lt;/strong&gt;
(by V4711, licensed under &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;CC BY-SA 4.0&lt;/a&gt;, retrieved from &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/4/40/Kernel-based_Virtual_Machine.svg&#34;&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&#34;features&#34;&gt;Features&lt;/h4&gt;
&lt;p&gt;KVM is an open source software. It supports &lt;a href=&#34;http://www.linux-kvm.org/page/Guest_Support_Status&#34;&gt;various guest OSes&lt;/a&gt;, like Linux, Windows, Solaris, etc.&lt;/p&gt;
&lt;p&gt;KVM does not perform any emulation itself, but it exposes the &lt;em&gt;&lt;strong&gt;*/dev/kvm*&lt;/strong&gt;&lt;/em&gt; interface, by which an external userspace host can do emulation. &lt;a href=&#34;https://en.wikipedia.org/wiki/QEMU&#34;&gt;QEMU&lt;/a&gt; is one such host.&lt;/p&gt;
&lt;p&gt;KVM supports &lt;a href=&#34;https://www.linux-kvm.org/page/Nested_Guests&#34;&gt;nested guests&lt;/a&gt;, which allow us to run virtual machines within virtual machines. It also supports &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/&#34;&gt;overcommitting&lt;/a&gt;, so that we can allocate more virtualized resources (CPUs or memory) than the available resources on the system. To do overcommitting for a VM, KVM dynamically swaps resources from another guest that is not using them.&lt;/p&gt;
&lt;h4 id=&#34;demo-creating-a-virtual-machine-instance-on-the-kvm-hypervisor&#34;&gt;Demo: Creating a Virtual Machine Instance on the KVM Hypervisor&lt;/h4&gt;
&lt;p&gt;Video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-kvm&#34;&gt;Benefits of Using KVM&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using KVM are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is an open source solution, and, as such, free to customize.&lt;/li&gt;
&lt;li&gt;Using KVM is efficient from a financial perspective as well, due to the lower costs associated with it.&lt;/li&gt;
&lt;li&gt;It is highly scalable.&lt;/li&gt;
&lt;li&gt;KVM employs advanced security features, utilizing SELinux. It provides MAC (Mandatory Access Control) security between Virtual Machines. KVM has received awards for meeting common government and military security standards and for allowing open virtualization for homeland security projects.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-virtualbox&#34;&gt;Introduction to VirtualBox&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt; is an x86 and AMD64/Intel64 virtualization product from Oracle, which runs on Windows, Linux, Macintosh, and Solaris hosts and supports &lt;a href=&#34;https://www.virtualbox.org/wiki/Guest_OSes&#34;&gt;guest OSes&lt;/a&gt; from Windows, Linux families, and others, like Solaris, FreeBSD, DOS, etc.&lt;/p&gt;
&lt;p&gt;It is an easy-to-use multi-platform hypervisor. It is not part of the mainline kernel. So, to use it on Linux, we have to compile and insert the respective kernel module.&lt;/p&gt;
&lt;p&gt;VirtualBox is distributed under the &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GNU General Public License (GPL) version 2&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;demo-creating-a-virtual-machine-instance-on-virtualbox&#34;&gt;Demo: Creating a Virtual Machine Instance on VirtualBox&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-virtualbox&#34;&gt;Benefits of Using VirtualBox&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using VirtualBox are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is an open source solution.&lt;/li&gt;
&lt;li&gt;It is free to use.&lt;/li&gt;
&lt;li&gt;It runs on Linux, Windows, OS X, and Solaris.&lt;/li&gt;
&lt;li&gt;It provides two virtualization choices: software-based virtualization and hardware-assisted virtualization.&lt;/li&gt;
&lt;li&gt;It is an easy-to-use multi-platform hypervisor.&lt;/li&gt;
&lt;li&gt;It provides the ability to run virtualized applications side-by-side with normal desktop applications.&lt;/li&gt;
&lt;li&gt;It provides teleportation - live migration.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vagrant&#34;&gt;Vagrant&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-vagrant&#34;&gt;Introduction to Vagrant&lt;/h4&gt;
&lt;p&gt;Using virtual machines in a development environment has numerous benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Reproducible environment&lt;/li&gt;
&lt;li&gt;Management of multiple projects in their restricted environment&lt;/li&gt;
&lt;li&gt;Sharing the environment with other teammates&lt;/li&gt;
&lt;li&gt;Keeping the development and deployment environments in sync&lt;/li&gt;
&lt;li&gt;Running the same VM on different OSes, with a hypervisor like VirtualBox.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Configuring and sharing one VM is easy, but, when we have to deal with multiple VMs for the same project, doing everything manually can be tiresome. &lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; by HashiCorp helps us automate the setup of one or more VMs by providing an end-to-end lifecycle using the &lt;strong&gt;vagrant&lt;/strong&gt; command line. Vagrant is a cross-platform tool. It can be installed on Linux, Mac OSX, and Windows. We have to use different providers, depending on the OS. It has recently added support for Docker, which can help us manage Docker containers.&lt;/p&gt;
&lt;h4 id=&#34;managing-virtual-machines-with-vagrant&#34;&gt;Managing Virtual Machines with Vagrant&lt;/h4&gt;
&lt;p&gt;Next, let&amp;rsquo;s see how Vagrant helps us manage virtual machines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**Vagrantfile
**It is a text file with the Ruby syntax, which has all the information about configuring and provisioning a set of machines. It has details like the machine type, image, networking, provider-specific information, provisioner details, etc. We provide a sample Vagrantfile below:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*# -*- mode: ruby -*-
*&lt;/strong&gt;&lt;/em&gt;****# vi: set ft=ruby :&lt;/p&gt;
&lt;p&gt;****&lt;em&gt;&lt;strong&gt;*Vagrant.configure(2) do |config|
*&lt;/strong&gt;&lt;/em&gt;  &lt;em&gt;&lt;strong&gt;*# Every Vagrant development environment requires a box. You can search for
*&lt;/strong&gt;&lt;/em&gt;  &lt;em&gt;&lt;strong&gt;*# boxes at &lt;a href=&#34;https://atlas.hashicorp.com/search&#34;&gt;https://atlas.hashicorp.com/search&lt;/a&gt;.
*&lt;/strong&gt;&lt;/em&gt;  &lt;em&gt;&lt;strong&gt;*config.vm.box*&lt;/strong&gt;&lt;/em&gt; ****= &amp;ldquo;centos/7&amp;rdquo;&lt;/p&gt;
&lt;p&gt;****  ****# Create a private network, which allows host-only access to the machine
****
**# using a specific IP.**
**config.vm.network &amp;ldquo;private_network&amp;rdquo;, ip: &amp;ldquo;192.168.33.10&amp;rdquo;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;# config.vm.synced_folder &amp;ldquo;../data&amp;rdquo;, &amp;ldquo;/vagrant_data&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.vm.provider &amp;ldquo;virtualbox&amp;rdquo; do |vb|&lt;/strong&gt;
&lt;strong&gt;# Customize the amount of memory on the VM:&lt;/strong&gt;
&lt;strong&gt;vb.memory = &amp;ldquo;1024&amp;rdquo;&lt;/strong&gt;
&lt;strong&gt;end&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.vm.provision &amp;ldquo;shell&amp;rdquo;, inline: &amp;laquo;-SHELL&lt;/strong&gt;
&lt;strong&gt;yum install vim -y&lt;/strong&gt;
&lt;strong&gt;SHELL&lt;/strong&gt;
&lt;strong&gt;end&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;*vagrant*&lt;/strong&gt;&lt;/em&gt; command reads the configuration given in the configuration file and does different operations, like &lt;strong&gt;up&lt;/strong&gt;, &lt;strong&gt;ssh&lt;/strong&gt;, &lt;strong&gt;destroy&lt;/strong&gt;, etc. The &lt;em&gt;&lt;strong&gt;*vagrant*&lt;/strong&gt;&lt;/em&gt; command also has sub-commands like &lt;em&gt;&lt;strong&gt;*box*&lt;/strong&gt;&lt;/em&gt; to manage Box images, &lt;strong&gt;rdp&lt;/strong&gt; to connect to VMs using Remote Desktop Protocol (RDP), etc. A detailed list of commands is available at its &lt;a href=&#34;https://www.vagrantup.com/docs/cli/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**Boxes
**We need to provide an image in the Vagrantfile, which we can use to instantiate machines. In the example above, we have used &lt;strong&gt;centos/7&lt;/strong&gt; as the base image. If the image is not available locally, then it can be downloaded from a central repository like &lt;a href=&#34;https://atlas.hashicorp.com/&#34;&gt;Atlas&lt;/a&gt;, which is the image repository provided by HashiCorp. We can version these images and use them depending on our need, by updating the Vagrantfile accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**Vagrant Providers
**&lt;a href=&#34;https://www.vagrantup.com/docs/providers/&#34;&gt;Providers&lt;/a&gt; are the underlying engine/hypervisor used to provision a machine. By default, Vagrant supports VirtualBox, Hyper-V and Docker. We also have custom providers, like KVM, AWS, etc. VirtualBox is the default provider.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**Synced Folders
**With the &lt;em&gt;Synced Folder&lt;/em&gt; feature, we can sync a directory on the host system with a VM, which helps the user manage shared files/directories easily. For example, in the above example, if we un-comment the line below from Vagrantfile, then the &lt;strong&gt;../data&lt;/strong&gt; folder from the current working directory of the host system would be shared with the &lt;em&gt;&lt;strong&gt;*/vagrant_data*&lt;/strong&gt;&lt;/em&gt; file on the VM.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*# config.vm.synced_folder &amp;ldquo;../data&amp;rdquo;, &amp;ldquo;vagrant_data&amp;rdquo;*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Provisioning&lt;/strong&gt;
&lt;a href=&#34;https://www.vagrantup.com/docs/provisioning/&#34;&gt;Provisioners&lt;/a&gt; allow us to automatically install software, make configuration changes, etc. after the machine is booted. It is a part of the &lt;em&gt;&lt;strong&gt;*vagrant up*&lt;/strong&gt;&lt;/em&gt; process. There are many types of provisioners available, such as File, Shell, Ansible, Puppet, Chef, Docker, etc. In the example below, we used Shell as the provisioner to install the &lt;em&gt;&lt;strong&gt;*vim*&lt;/strong&gt;&lt;/em&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.vm.provision &amp;ldquo;shell&amp;rdquo;, inline: &amp;laquo;-SHELL&lt;/strong&gt;
&lt;strong&gt;yum install vim -y&lt;/strong&gt;
&lt;strong&gt;SHELL&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Plugins&lt;/strong&gt;
We can use &lt;a href=&#34;https://www.vagrantup.com/docs/plugins/&#34;&gt;plugins&lt;/a&gt; to extend the functionality of Vagrant.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;demo-automating-the-creation-and-deletion-of-vms-with-vagrant&#34;&gt;Demo: Automating the Creation and Deletion of VMs with Vagrant&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-vagrant&#34;&gt;Benefits of Using Vagrant&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using Vagrant are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It automates the setup of one or more VMs, which results in saved time and lower operational costs.&lt;/li&gt;
&lt;li&gt;It is a cross-platform tool.&lt;/li&gt;
&lt;li&gt;It provides support for Docker, thus helping us manage Docker containers.&lt;/li&gt;
&lt;li&gt;It is easy to install.&lt;/li&gt;
&lt;li&gt;It is very useful in multi-developer teams.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter-2-infrastructure-as-a-service-iaas&#34;&gt;Chapter 2. Infrastructure as a Service (IaaS)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-1&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Infrastructure as a Service&lt;/strong&gt; (&lt;strong&gt;IaaS&lt;/strong&gt;) is a form of cloud computing which provides on-demand physical and virtual computing resources, storage, network, firewall, load balancers, etc. To provide virtual computing resources, IaaS uses some form of hypervisor, like Xen, KVM, VMware ESX/ESXi, Hyper-V, etc.&lt;/p&gt;
&lt;p&gt;Infrastructure as a Service is the backbone of all cloud services, providing the compute resources. After getting the compute resources, we provide other services on top of that.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;
Let&amp;rsquo;s say that you want to have a set of ten Linux systems with 4GB RAM each, and two Windows systems with 8GB each to deploy your software. You can go to any of the IaaS providers and request these systems. Generally, a IaaS provider creates the respective VMs in the background, puts them in the same internal network, and shares the credentials with you, thus allowing you to access them. Other than VMs, some IaaS providers offer bare metal machines for provisioning.&lt;/p&gt;
&lt;p&gt;In this chapter, we will take a closer look at some of the IaaS providers and their features. We will also provide a demo video for each one of them.&lt;/p&gt;
&lt;h4 id=&#34;learning-objectives-1&#34;&gt;Learning Objectives&lt;/h4&gt;
&lt;p&gt;By the end of this chapter, you should be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Explain the concept of Infrastructure as a Service (IaaS).&lt;/li&gt;
&lt;li&gt;Distinguish between different IaaS providers.&lt;/li&gt;
&lt;li&gt;Provision a virtual machine on top of different IaaS providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;amazon-ec2&#34;&gt;Amazon EC2&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-amazon-ec2&#34;&gt;Introduction to Amazon EC2&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Amazo&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;n&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;Web&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt; Ser&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/&#34;&gt;vices&lt;/a&gt; (&lt;strong&gt;AWS&lt;/strong&gt;) is one of the leaders in providing different cloud services. With &lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;Am&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;azon&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt; Elastic&lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt; &lt;/a&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;Compute&lt;/a&gt;, Amazon provides the IaaS infrastructure, on which most of the other services are built. We can manage compute resources from the Amazon EC2 web interface and can scale up or down, depending on the need. AWS also &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;offers a command line&lt;/a&gt; to manage the instances from the command line.&lt;/p&gt;
&lt;p&gt;Amazon EC2 uses XEN and KVM hypervisors to provision compute resources.&lt;/p&gt;
&lt;h4 id=&#34;features-and-tools&#34;&gt;Features and Tools&lt;/h4&gt;
&lt;p&gt;Amazon EC2 offers compute instances for different resources, which we can choose from depending on our need. Some examples of instances offered are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;*t2.nano*&lt;/strong&gt;&lt;/em&gt;: 512 MiB of memory, 1 vCPU, 3 CPU Credits/hour, EBS-only, 32-bit or 64-bit platform&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;*c4.large*&lt;/strong&gt;&lt;/em&gt;: 3.75 GiB of memory, 2 vCPUs, 64-bit platform&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;*d2.8xlarge*&lt;/strong&gt;&lt;/em&gt;: 244 GiB of memory, 36 vCPUs, 24 x 2000 GB of HDD-based instance storage, 64-bit platform, 10 Gigabit Ethernet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Amazon EC2 provides some preconfigured images, called Amazon Machine Images (AMIs). These images can be used to quickly start instances. We can also create our own custom AMIs to boot our instances.&lt;/p&gt;
&lt;p&gt;One important aspect to note is that Amazon supports configuring security and network access to our instances.&lt;/p&gt;
&lt;p&gt;With Amazon Elastic Block Store (EBS) we can attach/detach persistent storage to our instances.&lt;/p&gt;
&lt;p&gt;EC2 supports the provisioning of dedicated hosts, which means we can get an entire physical machine for our use.&lt;/p&gt;
&lt;p&gt;Amazon EC2 has many other features, allowing you to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Create an Elastic IP for remapping the Static IP address automatically&lt;/li&gt;
&lt;li&gt;Provision a Virtual Private Cloud for isolation. Amazon Virtual Private Cloud provides secure and robust networking for Amazon EC2 instances&lt;/li&gt;
&lt;li&gt;Use CloudWatch for monitoring resources and applications&lt;/li&gt;
&lt;li&gt;Use Auto Scaling to dynamically resize your resources, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;demo-creating-and-destroying-an-instance-using-amazon-ec2-compute-service&#34;&gt;Demo: Creating and Destroying an Instance using Amazon EC2 Compute Service&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-amazon-ec2&#34;&gt;Benefits of Using Amazon EC2&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using Amazon EC2 are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is an easy-to-use IaaS solution.&lt;/li&gt;
&lt;li&gt;It is flexible and scalable.&lt;/li&gt;
&lt;li&gt;It provides a secure and robust functionality for your compute resources.&lt;/li&gt;
&lt;li&gt;It enables automation.&lt;/li&gt;
&lt;li&gt;It is cost-effective: you only pay for the time and resources you use.&lt;/li&gt;
&lt;li&gt;It is designed to work in conjunction with other AWS components.&lt;/li&gt;
&lt;li&gt;It promises 99.99% uptime.&lt;/li&gt;
&lt;li&gt;It provides specialized instances for workloads, such as floating point operations, high graphics capability, high input/output (I/O), High Performance Computing (HPC), etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;azure-virtual-machine&#34;&gt;Azure Virtual Machine&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-azure-virtual-machine&#34;&gt;Introduction to Azure Virtual Machine&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Azure&lt;/a&gt; is Microsoft&amp;rsquo;s cloud offering, which has products in different domains, such as compute, web and mobile, data and storage, Internet of Things, and many others. Through &lt;strong&gt;Azure Virtual Machine&lt;/strong&gt;, Microsoft provides compute provisioning and management:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;We can manage Virtual Machines from Azure&amp;rsquo;s web interface.&lt;/li&gt;
&lt;li&gt;Azure also provides a &lt;a href=&#34;https://github.com/azure/azure-xplat-cli&#34;&gt;command line utility&lt;/a&gt; to manage resources and applications on the Azure cloud.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;features-and-tools-1&#34;&gt;Features and Tools&lt;/h4&gt;
&lt;p&gt;Azure lets you choose between different tiers, based on the usage and the operating systems or the predefined application virtual machines (SharePoint, Oracle, etc.). To learn more, please take a look at the &lt;a href=&#34;https://azure.microsoft.com/en-in/pricing/details/virtual-machines/linux/&#34;&gt;Linux Virtual Machines Pricing&lt;/a&gt; web page. You can choose to pay as you go or get better pricing by reserving instances for one or three years.&lt;/p&gt;
&lt;p&gt;Using Resource Manager templates, we can define the template for the virtual machine deployment.&lt;/p&gt;
&lt;p&gt;Azure offers other features as well, like making seamless hybrid connections, faster I/O in certain types of tiers, backups, etc.&lt;/p&gt;
&lt;h4 id=&#34;demo-creating-a-virtual-machine-instance-on-microsoft-azure&#34;&gt;Demo: Creating a Virtual Machine Instance on Microsoft Azure&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-azure-virtual-machine&#34;&gt;Benefits of Using Azure Virtual Machine&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using Azure virtual machine are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is an easy-to-use IaaS solution.&lt;/li&gt;
&lt;li&gt;It is flexible and scalable.&lt;/li&gt;
&lt;li&gt;It provides a secure and robust functionality for your compute resources.&lt;/li&gt;
&lt;li&gt;It enables automation.&lt;/li&gt;
&lt;li&gt;It is cost-effective: you only pay for the time and resources you use.&lt;/li&gt;
&lt;li&gt;It is designed to work in conjunction with other Azure services.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;digitalocean&#34;&gt;DigitalOcean&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-digitalocean&#34;&gt;Introduction to DigitalOcean&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt; helps you create a simple cloud quickly, in as little as 55 seconds. All of the VMs are created on top of the KVM hypervisor and have SSD (Solid-State Drive) as the primary disk.&lt;/p&gt;
&lt;h4 id=&#34;features-and-tools-2&#34;&gt;Features and Tools&lt;/h4&gt;
&lt;p&gt;Based on your need, DigitalOcean offers &lt;a href=&#34;https://www.digitalocean.com/pricing/&#34;&gt;different plans&lt;/a&gt;. Some examples of plan offerings are listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;2GB Memory, 2 Core Processor, 60 GB SSD Disk, 3 TB transfer&lt;/li&gt;
&lt;li&gt;48GB Memory, 12 Core Processor, 960 GB SSD Disk, 8 TB transfer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DigitalOcean provides other features, like Floating IPs, Shared Private Networking, Load Balancers, Team Accounts, etc.&lt;/p&gt;
&lt;h4 id=&#34;demo-creating-a-virtual-machine-on-digitalocean&#34;&gt;Demo: Creating a Virtual Machine on DigitalOcean&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-digitalocean&#34;&gt;Benefits of Using DigitalOcean&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using DigitalOcean are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It allows you to configure a cloud in as little as 55 seconds.&lt;/li&gt;
&lt;li&gt;It is flexible and scalable.&lt;/li&gt;
&lt;li&gt;It provides a high level of security by using KVM virtualized droplets.&lt;/li&gt;
&lt;li&gt;It enables automation.&lt;/li&gt;
&lt;li&gt;It is cost-effective: you only pay for the time and resources you use.&lt;/li&gt;
&lt;li&gt;It is focused on providing a simple, user-friendly experience.&lt;/li&gt;
&lt;li&gt;It uses high-performance Solid State Disks.&lt;/li&gt;
&lt;li&gt;It offers a one-click installation of a multitude of application stacks like LAMP, LEMP, MEAN, and Docker.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;google-compute-engine&#34;&gt;Google Compute Engine&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-google-compute-engine&#34;&gt;Introduction to Google Compute Engine&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt; is Google&amp;rsquo;s Cloud offering, which has many products in different domains, like compute, storage, networking, big data, and others. &lt;a href=&#34;https://cloud.google.com/compute/&#34;&gt;Google Compute Engine&lt;/a&gt; provides the compute service. We can manage the instances through GUI, APIs or &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/&#34;&gt;command line&lt;/a&gt;. Access to the individual VM&amp;rsquo;s console is also available.&lt;/p&gt;
&lt;h4 id=&#34;features-and-tools-3&#34;&gt;Features and Tools&lt;/h4&gt;
&lt;p&gt;GCE supports different &lt;a href=&#34;https://cloud.google.com/compute/docs/machine-types&#34;&gt;machine types&lt;/a&gt;, which we can choose from depending on our need. They are categorized in the following types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Standard machine types&lt;/li&gt;
&lt;li&gt;High-CPU machine types&lt;/li&gt;
&lt;li&gt;High-memory machine types&lt;/li&gt;
&lt;li&gt;Shared-core machine types&lt;/li&gt;
&lt;li&gt;We can also configure custom machine types.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GCE has other features as well, like Persistent Disk, Local SSD, Global Load Balancing, Compliance and Security, Automatic Discount, etc.&lt;/p&gt;
&lt;h4 id=&#34;demo-creating-and-destroying-an-instance-on-google-compute-engine&#34;&gt;Demo: Creating and Destroying an Instance on Google Compute Engine&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-google-compute-engine&#34;&gt;Benefits of Using Google Compute Engine&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using Google Compute Engine are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is flexible and allows you to scale your applications easily.&lt;/li&gt;
&lt;li&gt;Fast boot time.&lt;/li&gt;
&lt;li&gt;It is very secure, encrypting all data stored.&lt;/li&gt;
&lt;li&gt;It enables automation.&lt;/li&gt;
&lt;li&gt;It is cost-effective: you only pay for the time and resources you use.&lt;/li&gt;
&lt;li&gt;It supports custom machine types.&lt;/li&gt;
&lt;li&gt;It supports Virtual Private Cloud, Load Balancers, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;openstack&#34;&gt;OpenStack&lt;/h3&gt;
&lt;h4 id=&#34;introduction-to-openstack&#34;&gt;Introduction to OpenStack&lt;/h4&gt;
&lt;p&gt;Earlier in this chapter, we have seen examples for consuming the services of different cloud providers to provision our infrastructure. What if we want to become a cloud provider and offer cloud computing services?&lt;/p&gt;
&lt;p&gt;With &lt;a href=&#34;https://www.openstack.org/&#34;&gt;OpenStack&lt;/a&gt;&lt;strong&gt;,&lt;/strong&gt; we can offer a cloud computing platform for public and private clouds. OpenStack was started as a joint project between &lt;a href=&#34;https://www.rackspace.com/&#34;&gt;Rackspace&lt;/a&gt; and &lt;a href=&#34;http://www.nasa.gov/&#34;&gt;NASA&lt;/a&gt; in 2010. In 2012, a non-profit corporate entity, called the OpenStack Foundation, was formed and it is managing it since then. It is now supported by more than 500 organizations. OpenStack is an open source software platform, which is released under an &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other than providing a IaaS solution, OpenStack has evolved over time to provide other services, like Database, Storage, etc.&lt;/p&gt;
&lt;h4 id=&#34;componentsfeatures&#34;&gt;Components/Features&lt;/h4&gt;
&lt;p&gt;Due to the modular nature of OpenStack, anyone can add additional components to get specific features or functionality. Some of the major OpenStack components are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/keystone/&#34;&gt;Keystone&lt;/a&gt;
Provides Identity, Token, Catalog, and Policy services to projects.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/nova/&#34;&gt;Nova&lt;/a&gt;
Provides on-demand compute resources.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/horizon/&#34;&gt;Horizon&lt;/a&gt;
Provides the Dashboard, which is a web-based user interface to manage the OpenStack service.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/neutron/&#34;&gt;Neutron&lt;/a&gt;
Implements the network as a service and provides network capabilities to different OpenStack components.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/glance/&#34;&gt;Glance&lt;/a&gt;
Provides a service where users can upload and discover data assets, like images and metadata.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/swift/&#34;&gt;Swift&lt;/a&gt;
Provides a highly available, distributed, eventually consistent object/blob store.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/cinder/&#34;&gt;Cinder&lt;/a&gt;
Provides block storage as a service.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/heat/&#34;&gt;Heat&lt;/a&gt;
Provides a service to orchestrate composite cloud applications, using a declarative template format through an OpenStack-native REST API.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.openstack.org/developer/ceilometer/&#34;&gt;Ceilometer&lt;/a&gt;
It is part of the Telemetry project and provides data collection services for billing and other purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of the OpenStack components is also modular by design. For example, with Nova we can select an underneath hypervisor depending on the requirement, which can be either libvirt (qemu/KVM), Hyper-V, VMware, XenServer, Xen via libvirt.&lt;/p&gt;
&lt;h4 id=&#34;demo-deploying-an-instance-with-openstack&#34;&gt;Demo: Deploying an Instance with OpenStack&lt;/h4&gt;
&lt;p&gt;video&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-using-openstack&#34;&gt;Benefits of Using OpenStack&lt;/h4&gt;
&lt;p&gt;Some of the benefits of using OpenStack are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;It is an open source solution.&lt;/li&gt;
&lt;li&gt;It is a cloud computing platform for public and private clouds.&lt;/li&gt;
&lt;li&gt;It offers a flexible, customizable, vendor-neutral environment.&lt;/li&gt;
&lt;li&gt;It provides a high level of security.&lt;/li&gt;
&lt;li&gt;It facilitates automation throughout the stages of the cloud lifecycle.&lt;/li&gt;
&lt;li&gt;By reducing system management overhead and avoiding vendor lock-in, it can be cost-effective.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chapter-3-platform-as-a-service-paas&#34;&gt;Chapter 3. Platform as a Service (PaaS)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-2&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h4 id=&#34;introduction-1&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Platform as a Service&lt;/strong&gt; (&lt;strong&gt;PaaS&lt;/strong&gt;) is a class of cloud computing services which allows its users to develop, run, and manage applications without worrying about the underlying infrastructure. With PaaS, users can simply focus on building their applications, which is a great help to developers.&lt;/p&gt;
&lt;p&gt;We can either use PaaS services offered by different cloud computing providers like Amazon, Google, Azure, etc., or deploy it on-premise, using software like OpenShift Origin.&lt;/p&gt;
&lt;p&gt;PaaS can be deployed on top of IaaS, or, independently on VMs, bare metal, and containers.&lt;/p&gt;
&lt;p&gt;In this chapter, we will take a closer look at some of the PaaS providers and their features. We will also provide a demo video for each one of them.&lt;/p&gt;
&lt;h3 id=&#34;cloud-foundry&#34;&gt;Cloud Foundry&lt;/h3&gt;
&lt;h3 id=&#34;openshift&#34;&gt;Openshift&lt;/h3&gt;
&lt;h3 id=&#34;the-heroku-platform&#34;&gt;The Heroku Platform&lt;/h3&gt;
&lt;h2 id=&#34;chapter-4-containers&#34;&gt;Chapter 4. Containers&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-3&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;containers&#34;&gt;Containers&lt;/h3&gt;
&lt;h3 id=&#34;project-moby&#34;&gt;Project Moby&lt;/h3&gt;
&lt;h2 id=&#34;chapter-5-containers-micro-oses-for-containers&#34;&gt;Chapter 5. Containers: Micro OSes for Containers&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-4&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;atomic-host-and-red-hat-coreos&#34;&gt;Atomic Host and Red Hat CoreOS&lt;/h3&gt;
&lt;h3 id=&#34;vmware-photon&#34;&gt;VMWare Photon&lt;/h3&gt;
&lt;h3 id=&#34;rancheros&#34;&gt;RancherOS&lt;/h3&gt;
&lt;h2 id=&#34;chapter-6-containers-container-orchestration&#34;&gt;Chapter 6. Containers: Container Orchestration&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-5&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;docker-swarm&#34;&gt;Docker Swarm&lt;/h3&gt;
&lt;h3 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h3&gt;
&lt;h3 id=&#34;deploying-containers-with-mesos&#34;&gt;Deploying Containers with Mesos&lt;/h3&gt;
&lt;h3 id=&#34;nomad-by-hashicorp&#34;&gt;Nomad by HashiCorp&lt;/h3&gt;
&lt;h3 id=&#34;kubernetes-hosted-solutions&#34;&gt;Kubernetes Hosted Solutions&lt;/h3&gt;
&lt;h3 id=&#34;amazon-ecs&#34;&gt;Amazon ECS&lt;/h3&gt;
&lt;h2 id=&#34;chapter-7-unikernels&#34;&gt;Chapter 7. Unikernels&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-6&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;unikernels&#34;&gt;Unikernels&lt;/h3&gt;
&lt;h2 id=&#34;chapter-8-microservices&#34;&gt;Chapter 8. Microservices&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-7&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;microservices&#34;&gt;Microservices&lt;/h3&gt;
&lt;h2 id=&#34;chapter-9-software-defined-networking-and-networking-for-containers&#34;&gt;Chapter 9. Software-Defined Networking and Networking for Containers&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-8&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;software-defined-networking-sdn&#34;&gt;Software-Defined Networking (SDN)&lt;/h3&gt;
&lt;h3 id=&#34;networking-for-containers&#34;&gt;Networking for Containers&lt;/h3&gt;
&lt;h3 id=&#34;docker-single-host-networking&#34;&gt;Docker Single-Host Networking&lt;/h3&gt;
&lt;h3 id=&#34;docker-multi-host-networking&#34;&gt;Docker Multi-Host Networking&lt;/h3&gt;
&lt;h3 id=&#34;docker-network-driver-plugins&#34;&gt;Docker Network Driver Plugins&lt;/h3&gt;
&lt;h3 id=&#34;kubernetes-networking&#34;&gt;Kubernetes Networking&lt;/h3&gt;
&lt;h3 id=&#34;cloud-foundry-container-to-container-networking&#34;&gt;Cloud Foundry: Container to Container Networking&lt;/h3&gt;
&lt;h2 id=&#34;chapter-10-software-defined-storage-and-storage-management-for-containers&#34;&gt;Chapter 10. Software-Defined Storage and Storage Management for Containers&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-9&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;ceph&#34;&gt;Ceph&lt;/h3&gt;
&lt;h3 id=&#34;glusterfs&#34;&gt;GlusterFS&lt;/h3&gt;
&lt;h3 id=&#34;storage-management-for-containers&#34;&gt;Storage Management for Containers&lt;/h3&gt;
&lt;h3 id=&#34;volume-plugins-for-docker&#34;&gt;Volume Plugins for Docker&lt;/h3&gt;
&lt;h3 id=&#34;volume-management-in-kubernetes&#34;&gt;Volume Management in Kubernetes&lt;/h3&gt;
&lt;h3 id=&#34;container-storage-interface-csi&#34;&gt;Container Storage Interface (CSI)&lt;/h3&gt;
&lt;h3 id=&#34;cloud-foundry-volume-service&#34;&gt;Cloud Foundry Volume Service&lt;/h3&gt;
&lt;h2 id=&#34;chapter-11-devops-and-cicd&#34;&gt;Chapter 11. DevOps and CI/CD&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-10&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;cicd-jenkins&#34;&gt;CI/CD: Jenkins&lt;/h3&gt;
&lt;h3 id=&#34;cicd-travis-ci&#34;&gt;CI/CD: Travis CI&lt;/h3&gt;
&lt;h3 id=&#34;cicd-shippable&#34;&gt;CI/CD Shippable&lt;/h3&gt;
&lt;h3 id=&#34;cicd-concourse&#34;&gt;CI/CD: Concourse&lt;/h3&gt;
&lt;h3 id=&#34;cloud-native-cicd&#34;&gt;Cloud Native CI/CD&lt;/h3&gt;
&lt;h2 id=&#34;chapter-12-tools-for-cloud-infrastructure-i-configuration-management&#34;&gt;Chapter 12. Tools for Cloud Infrastructure I (Configuration Management)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-11&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;ansible&#34;&gt;Ansible&lt;/h3&gt;
&lt;h3 id=&#34;puppet&#34;&gt;Puppet&lt;/h3&gt;
&lt;h3 id=&#34;chef&#34;&gt;Chef&lt;/h3&gt;
&lt;h3 id=&#34;salt-open&#34;&gt;Salt Open&lt;/h3&gt;
&lt;h2 id=&#34;chapter-13-tools-for-cloud-infrastructure-ii-build--release&#34;&gt;Chapter 13. Tools for Cloud Infrastructure II (Build &amp;amp; Release)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-12&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;terraform&#34;&gt;Terraform&lt;/h3&gt;
&lt;h3 id=&#34;bosh&#34;&gt;BOSH&lt;/h3&gt;
&lt;h2 id=&#34;chapter-14-tools-for-cloud-infrastructure-iii-key-value-pair-store&#34;&gt;Chapter 14. Tools for Cloud Infrastructure III (Key-Value Pair Store)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-13&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;etcd&#34;&gt;etcd&lt;/h3&gt;
&lt;h3 id=&#34;consul&#34;&gt;Consul&lt;/h3&gt;
&lt;h2 id=&#34;chapter-15-tools-for-cloud-infrastructure-iv-image-building&#34;&gt;Chapter 15. Tools for Cloud Infrastructure IV (Image Building)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-14&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;building-docker-images&#34;&gt;Building Docker Images&lt;/h3&gt;
&lt;h3 id=&#34;packer&#34;&gt;Packer&lt;/h3&gt;
&lt;h2 id=&#34;chapter-16-tools-for-cloud-infrastructure-v-debugging-logging-and-monitoring-for-containerized-applications&#34;&gt;Chapter 16. Tools for Cloud Infrastructure V (Debugging, Logging, and Monitoring for Containerized Applications)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-15&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;sysdig&#34;&gt;Sysdig&lt;/h3&gt;
&lt;h3 id=&#34;cadvisor-and-heapster&#34;&gt;cAdvisor and Heapster&lt;/h3&gt;
&lt;h3 id=&#34;fluentd&#34;&gt;Fluentd&lt;/h3&gt;
&lt;h3 id=&#34;datadog&#34;&gt;Datadog&lt;/h3&gt;
&lt;h3 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h3&gt;
&lt;h2 id=&#34;chapter-17-service-mash&#34;&gt;Chapter 17. Service Mash&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-16&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;features-and-implementation-of-service-mash&#34;&gt;Features and Implementation of Service Mash&lt;/h3&gt;
&lt;h3 id=&#34;envoy&#34;&gt;Envoy&lt;/h3&gt;
&lt;h3 id=&#34;istio&#34;&gt;Istio&lt;/h3&gt;
&lt;h3 id=&#34;linkerd&#34;&gt;Linkerd&lt;/h3&gt;
&lt;h2 id=&#34;chapter-18-internet-of-things-iot&#34;&gt;Chapter 18. Internet of Things (IoT)&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-17&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;internet-of-things&#34;&gt;Internet of Things&lt;/h3&gt;
&lt;h2 id=&#34;chapter-19-serverless-computing&#34;&gt;Chapter 19. Serverless Computing&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-18&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;serverless-computing&#34;&gt;Serverless Computing&lt;/h3&gt;
&lt;h3 id=&#34;aws-lambda&#34;&gt;AWS Lambda&lt;/h3&gt;
&lt;h3 id=&#34;google-cloud-functions&#34;&gt;Google Cloud Functions&lt;/h3&gt;
&lt;h3 id=&#34;azure-functions&#34;&gt;Azure Functions&lt;/h3&gt;
&lt;h3 id=&#34;serverless-and-containers&#34;&gt;Serverless and Containers&lt;/h3&gt;
&lt;h2 id=&#34;chapter-20-opentracing&#34;&gt;Chapter 20. OpenTracing&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-19&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;opentracing&#34;&gt;OpenTracing&lt;/h3&gt;
&lt;h3 id=&#34;jaeger&#34;&gt;Jaeger&lt;/h3&gt;
&lt;h2 id=&#34;chapter-21-how-to-be-successful-in-the-cloud&#34;&gt;Chapter 21. How to Be Successful in the Cloud&lt;/h2&gt;
&lt;h3 id=&#34;introduction-and-learning-objectives-20&#34;&gt;Introduction and Learning Objectives&lt;/h3&gt;
&lt;h3 id=&#34;developing-skills&#34;&gt;Developing Skills&lt;/h3&gt;
&lt;h3 id=&#34;challenges&#34;&gt;Challenges&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>The Java 3rd Library</title>
      <link>http://csyezheng.github.io/post/engineering-fundamentals/programming-languages/java/the-java-3rd-party-library/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/engineering-fundamentals/programming-languages/java/the-java-3rd-party-library/</guid>
      
        <description>&lt;p&gt;import org.alibaba.fastjson.JSONArray;
import org.alibaba.fastjson.JSONObject;
import com.amazonaws.Request;
import com.amazonaws.utils.StringUtils;
import com.atomikos.datasource.xa.StringUtils;&lt;/p&gt;
&lt;p&gt;import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.io.JsonStringEncoder;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;&lt;/p&gt;
&lt;p&gt;import com.google.common.cache.CacheBuilder;
import com.google.common.cache.CacheLoader;
import com.google.common.cache.LoadingCache;&lt;/p&gt;
&lt;p&gt;import com.google.gson.Gson;&lt;/p&gt;
&lt;p&gt;import com.ibm.db2.jcc.am.re;&lt;/p&gt;
&lt;p&gt;import com.jayway.restassured.RestAssured;
import com.jayway.restassured.path.json.JsonPath;
import com.jayway.restassured.config.RestAssuredconfig;
import com.jayway.restassured.response.Response;
import com.jayway.restassured.response.ValidatableResponse;
import com.jayway.restassured.specification.RequestSpecification;&lt;/p&gt;
&lt;p&gt;import freemarker.template.Template;
import freemarker.template.TemplateException;&lt;/p&gt;
&lt;p&gt;import groovy.json.internal.JsonFastParser;
import groovy.json.internal.ValueMap;&lt;/p&gt;
&lt;p&gt;import org.apache.ws.security.WSSecurityException;
import org.apache.ws.security.util.Base64;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;net.sf.json
&lt;ul&gt;
&lt;li&gt;JSONArray&lt;/li&gt;
&lt;li&gt;JSONNull&lt;/li&gt;
&lt;li&gt;JSONObject&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;org.activiti.engine
&lt;a href=&#34;https://blog.csdn.net/fanxiangru999/article/details/79381966?utm_medium=distribute.wap_relevant.none-task-blog-baidulandingword-1&#34;&gt;https://blog.csdn.net/fanxiangru999/article/details/79381966?utm_medium=distribute.wap_relevant.none-task-blog-baidulandingword-1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commons
&lt;ul&gt;
&lt;li&gt;beanutils
&lt;ul&gt;
&lt;li&gt;BeanUtils;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;collection
&lt;ul&gt;
&lt;li&gt;CollectionUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;collections
&lt;ul&gt;
&lt;li&gt;CollectionUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;httpclient
&lt;ul&gt;
&lt;li&gt;DefaultHttpMethodRetryHandler&lt;/li&gt;
&lt;li&gt;HttpClient;&lt;/li&gt;
&lt;li&gt;HttpException&lt;/li&gt;
&lt;li&gt;HttpMethod;&lt;/li&gt;
&lt;li&gt;HttpStatus;&lt;/li&gt;
&lt;li&gt;NameValuePair;&lt;/li&gt;
&lt;li&gt;UsernamePasswordCredentials&lt;/li&gt;
&lt;li&gt;URIException;&lt;/li&gt;
&lt;li&gt;methods
&lt;ul&gt;
&lt;li&gt;GetMethod;&lt;/li&gt;
&lt;li&gt;PostMethod;&lt;/li&gt;
&lt;li&gt;PutMehod&lt;/li&gt;
&lt;li&gt;RequestEntity&lt;/li&gt;
&lt;li&gt;StringRequestEntity;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.HttpConnectionManagerParams;&lt;/li&gt;
&lt;li&gt;params.
&lt;ul&gt;
&lt;li&gt;HttpMethodParams;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;io
&lt;ul&gt;
&lt;li&gt;FileUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lang
&lt;ul&gt;
&lt;li&gt;ClassUtils;&lt;/li&gt;
&lt;li&gt;StringUtils;&lt;/li&gt;
&lt;li&gt;EqualsBuilder&lt;/li&gt;
&lt;li&gt;HashCodeBuilder&lt;/li&gt;
&lt;li&gt;time
&lt;ul&gt;
&lt;li&gt;DateUtils&lt;/li&gt;
&lt;li&gt;StopWatch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lang3
&lt;ul&gt;
&lt;li&gt;BooleanUtils&lt;/li&gt;
&lt;li&gt;StringUtils&lt;/li&gt;
&lt;li&gt;time
&lt;ul&gt;
&lt;li&gt;DateFormatUtils&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;org.apache.http.client.HttpClient使用方法
一.org.apache.commons&lt;/p&gt;
&lt;p&gt;import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;&lt;/p&gt;
&lt;p&gt;import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;&lt;/p&gt;
&lt;p&gt;import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.support.DefaultTransactionDefinition;&lt;/p&gt;
&lt;p&gt;import org.springframework.core.io.Resource;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
import org.springframework.core.io.support.ResourcePatternResolver;&lt;/p&gt;
&lt;p&gt;import org.springframework.util.ClassUtils;&lt;/p&gt;
&lt;p&gt;import org.springframework.util.Assert;
import org.springframework.util.CollectionUtils;
import org.springframework.util.ReflectionUtils;
import org.springframework.util.StringUtils;&lt;/p&gt;
&lt;p&gt;import org.apache.ibatis.annotations.Param;
session.Configuration
Session.SqlsessionFactory&lt;/p&gt;
&lt;p&gt;org.apache.http
org.apache.commons.dbcp2
org.apache.commons.collections&lt;/p&gt;
&lt;p&gt;fastjson
mysql-connector-java
liquibase-core
liquibase-maven-plugin
commons.dbcp
commons.collections
commons-lang3
import org.apache.commons.lang.StringUtils;
jedis&lt;/p&gt;
&lt;p&gt;junit
dbunit
spring-test-dbunit
spring-test
spring-boot-starter-test&lt;/p&gt;
&lt;p&gt;disruptor&lt;/p&gt;
&lt;p&gt;cxf-spring-boot-starter-jaxrs
cxf-spring-boot-starter-jaxws
cxf-rt-rs-service-description-swagger
swagger-ui&lt;/p&gt;
&lt;p&gt;aaa&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>The Java Standard Library</title>
      <link>http://csyezheng.github.io/post/engineering-fundamentals/programming-languages/java/the-java-standard-library/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/engineering-fundamentals/programming-languages/java/the-java-standard-library/</guid>
      
        <description>&lt;h2 id=&#34;collections&#34;&gt;Collections&lt;/h2&gt;
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.oracle.com/javase/tutorial/figures/collections/colls-coreInterfaces.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note that all the core collection interfaces are generic. For example, this is the declaration of the &lt;code&gt;Collection&lt;/code&gt; interface.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public interface Collection&amp;lt;E&amp;gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;the-collection-interface&#34;&gt;The Collection Interface&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;(c);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;Collection&lt;/code&gt; interface contains methods that perform basic operations, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int size()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean isEmpty()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean contains(Object element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean add(E element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean remove(Object element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Iterator&amp;lt;E&amp;gt; iterator()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also contains methods that operate on entire collections, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boolean containsAll(Collection&amp;lt;?&amp;gt; c)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean addAll(Collection&amp;lt;? extends E&amp;gt; c)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean removeAll(Collection&amp;lt;?&amp;gt; c)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean retainAll(Collection&amp;lt;?&amp;gt; c)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void clear()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional methods for &lt;strong&gt;array&lt;/strong&gt; operations (such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Object[] toArray()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;T&amp;gt; T[] toArray(T[] a)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;obtaining sequential or parallel streams from the underlying collection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Stream&amp;lt;E&amp;gt; stream()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stream&amp;lt;E&amp;gt; parallelStream()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;traversing-collections&#34;&gt;Traversing Collections&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Aggregate Operations&lt;/p&gt;
&lt;p&gt;Aggregate operations are often used in conjunction with lambda expressions to make programming more expressive, using less lines of code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;myShapesCollection.stream()
.filter(e -&amp;gt; e.getColor() == Color.RED)
.forEach(e -&amp;gt; System.out.println(e.getName()));
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;myShapesCollection.parallelStream()
.filter(e -&amp;gt; e.getColor() == Color.RED)
.forEach(e -&amp;gt; System.out.println(e.getName()));
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;String joined = elements.stream()
.map(Object::toString)
.collect(Collectors.joining(&amp;quot;, &amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for-each Construct&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (Object o : collection)
    System.out.println(o);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iterators&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static void filter(Collection&amp;lt;?&amp;gt; c) {
    for (Iterator&amp;lt;?&amp;gt; it = c.iterator(); it.hasNext(); )
        if (!cond(it.next()))
            it.remove();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;collection-interface-bulk-operations&#34;&gt;Collection Interface Bulk Operations&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;containsAll&lt;/code&gt; — returns &lt;code&gt;true&lt;/code&gt; if the target &lt;code&gt;Collection&lt;/code&gt; contains all of the elements in the specified &lt;code&gt;Collection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addAll&lt;/code&gt; — adds all of the elements in the specified &lt;code&gt;Collection&lt;/code&gt; to the target &lt;code&gt;Collection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;removeAll&lt;/code&gt; — removes from the target &lt;code&gt;Collection&lt;/code&gt; all of its elements that are also contained in the specified &lt;code&gt;Collection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;retainAll&lt;/code&gt; — removes from the target &lt;code&gt;Collection&lt;/code&gt; all its elements that are &lt;em&gt;not&lt;/em&gt; also contained in the specified &lt;code&gt;Collection&lt;/code&gt;. That is, it retains only those elements in the target &lt;code&gt;Collection&lt;/code&gt; that are also contained in the specified &lt;code&gt;Collection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt; — removes all elements from the &lt;code&gt;Collection&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;c.removeAll(Collections.singleton(e));
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;c.removeAll(Collections.singleton(null));       // remove all of the null elements from a Collection
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;collection-interface-array-operations&#34;&gt;Collection Interface Array Operations&lt;/h6&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;toArray&lt;/code&gt;&lt;/strong&gt; methods are provided as a bridge between collections and older APIs that expect arrays on input.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Object[] a = c.toArray();
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;var staff = new LinkedList&amp;lt;String&amp;gt;();

String[] values = staff.toArray(new String[0]);
// or 
// String[] values = staff.toArray(new String[staff.size()]);
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;the-set-interface&#34;&gt;The Set Interface&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HashSet&lt;/p&gt;
&lt;p&gt;which stores its elements in a hash table,  it makes no guarantees concerning the order of iteration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Collection&amp;lt;Type&amp;gt; noDups = new HashSet&amp;lt;Type&amp;gt;(c);
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;c.stream()
.collect(Collectors.toSet()); // no duplicates
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TreeSet&lt;/p&gt;
&lt;p&gt;which stores its elements in a red-black tree, orders its elements based on their values.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set&amp;lt;String&amp;gt; set = people.stream()
.map(Person::getName)
.collect(Collectors.toCollection(TreeSet::new));
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinkedHashSet&lt;/p&gt;
&lt;p&gt;which is implemented as a hash table with a linked list running through it, orders its elements based on the insertion-order.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// preserves the order of the original collection while removing duplicate elements:
Collection&amp;lt;Type&amp;gt; noDups = new LinkedHashSet&amp;lt;Type&amp;gt;(c);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The following is a &lt;strong&gt;generic method that encapsulates&lt;/strong&gt; the preceding idiom, returning a &lt;code&gt;Set&lt;/code&gt; of the same generic type as the one passed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static &amp;lt;E&amp;gt; Set&amp;lt;E&amp;gt; removeDups(Collection&amp;lt;E&amp;gt; c) {
    return new LinkedHashSet&amp;lt;E&amp;gt;(c);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;set-interface-basic-operations&#34;&gt;Set Interface Basic Operations&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;String[] words = {&amp;quot;i&amp;quot;, &amp;quot;came&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;saw&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;left&amp;quot;};
Set&amp;lt;String&amp;gt; distinctWords = Arrays.asList(words).stream().collect(Collectors.toSet());
System.out.println(distinctWords.size()+ &amp;quot; distinct words: &amp;quot; + distinctWords);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that &lt;strong&gt;the code always refers to the &lt;code&gt;Collection&lt;/code&gt; by its interface type (&lt;code&gt;Set&lt;/code&gt;) rather than by its implementation type. This is a &lt;em&gt;strongly&lt;/em&gt; recommended programming practice&lt;/strong&gt; because it gives you the flexibility to change implementations merely by changing the constructor.&lt;/p&gt;
&lt;h6 id=&#34;set-interface-bulk-operations&#34;&gt;Set Interface Bulk Operations&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;s1.containsAll(s2)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;s1.addAll(s2)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;s1.retainAll(s2)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;s1.removeAll(s2)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To calculate the union, intersection, or set difference of two sets &lt;em&gt;nondestructively&lt;/em&gt; (without modifying either set), &lt;strong&gt;the caller must copy one set before calling the appropriate bulk operation.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set&amp;lt;String&amp;gt; uniques = new HashSet&amp;lt;String&amp;gt;();
Set&amp;lt;String&amp;gt; dups    = new HashSet&amp;lt;String&amp;gt;();
String[] words = {&amp;quot;i&amp;quot;, &amp;quot;came&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;saw&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;left&amp;quot;};
  
for (String a : words) {
    if (!uniques.add(a))
        dups.add(a);
}                                     // uniques ==&amp;gt; [left, came, saw, i], dups ==&amp;gt; [i]
  
boolean isContain = uniques.containsAll(dups);         // ==&amp;gt; true    
  
Set&amp;lt;String&amp;gt; union = new HashSet&amp;lt;String&amp;gt;(dups);
union.addAll(uniques);                // union ==&amp;gt; [left, came, saw, i]
  
Set&amp;lt;String&amp;gt; intersection = new HashSet&amp;lt;String&amp;gt;(uniques);
intersection.retainAll(dups);         // intersection ==&amp;gt; [i]
  
Set&amp;lt;String&amp;gt; difference = new HashSet&amp;lt;String&amp;gt;(uniques);
difference.removeAll(dups);           // difference ==&amp;gt; [left, came, saw]
  
System.out.println(&amp;quot;is contain:    &amp;quot; + isContain);    
System.out.println(&amp;quot;union words: &amp;quot; + union);      
System.out.println(&amp;quot;intersection words:    &amp;quot; + intersection);  
System.out.println(&amp;quot;difference words: &amp;quot; + difference); 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;the-list-interface&#34;&gt;The List Interface&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Positional access&lt;/code&gt; — manipulates elements based on their numerical position in the list. This includes methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;addAll&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static &amp;lt;E&amp;gt; void swap(List&amp;lt;E&amp;gt; a, int i, int j) {
    E tmp = a.get(i);
    a.set(i, a.get(j));
    a.set(j, tmp);
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;public static void shuffle(List&amp;lt;?&amp;gt; list, Random rnd) {
    for (int i = list.size(); i &amp;gt; 1; i--)
        swap(list, i - 1, rnd.nextInt(i));
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;import java.util.*;
  
public class Shuffle {
    public static void main(String[] args) {
        List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;();
        for (String a : args)
            list.add(a);
        Collections.shuffle(list, new Random());
        System.out.println(list);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The Arrays class has a static factory method called &lt;strong&gt;&lt;code&gt;asList&lt;/code&gt;&lt;/strong&gt;, which allows an array to be viewed as a List. This method does not copy the array. Changes in the &lt;code&gt;List&lt;/code&gt; write through to the array and vice versa. &lt;strong&gt;The resulting List is not a general-purpose &lt;code&gt;List&lt;/code&gt; implementation, because it doesn&amp;rsquo;t implement the (optional) &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; operations: Arrays are not resizable.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.util.*;
  
public class Shuffle {
    public static void main(String[] args) {
        List&amp;lt;String&amp;gt; list = Arrays.asList(args);
        Collections.shuffle(list);
        System.out.println(list);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Search&lt;/code&gt; — searches for a specified object in the list and returns its numerical position. Search methods include &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;lastIndexOf&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Iteration&lt;/code&gt; — extends &lt;code&gt;Iterator&lt;/code&gt; semantics to take advantage of the list&amp;rsquo;s sequential nature. The &lt;code&gt;listIterator&lt;/code&gt; methods provide this behavior.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (ListIterator&amp;lt;Type&amp;gt; it = list.listIterator(list.size()); it.hasNext(); ) {
    Type t = it.next();
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;for (ListIterator&amp;lt;Type&amp;gt; it = list.listIterator(list.size()); it.hasPrevious(); ) {
    Type t = it.previous();
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;String[] words = {&amp;quot;i&amp;quot;, &amp;quot;came&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;saw&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;left&amp;quot;};
List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;();
for (String a : words) {
  list.add(a);
}
ListIterator&amp;lt;String&amp;gt; it = list.listIterator()
it.previousIndex();       // ==&amp;gt; -1
var ret = it.next();      // ret ==&amp;gt; &amp;quot;i&amp;quot;
it.previousIndex();       // ==&amp;gt; 0
var obj = it.previous();  // obj ==&amp;gt; &amp;quot;i&amp;quot;
it.previousIndex();       // ==&amp;gt; -1
it.nextIndex();            // ==&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;String[] words = {&amp;quot;i&amp;quot;, &amp;quot;came&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;saw&amp;quot;, &amp;quot;i&amp;quot;, &amp;quot;left&amp;quot;};
List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;();
for (String a : words) {
  list.add(a);
}
public static &amp;lt;E&amp;gt; void replace(List&amp;lt;E&amp;gt; list, E val, E newVal) {
    for (ListIterator&amp;lt;E&amp;gt; it = list.listIterator(); it.hasNext(); )
        if (val == null ? it.next() == null : val.equals(it.next()))
            it.set(newVal);
}
replace(list, &amp;quot;i&amp;quot;, &amp;quot;e&amp;quot;)           // list ==&amp;gt; [e, came, e, saw, e, left]
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;public static &amp;lt;E&amp;gt; 
    void replace(List&amp;lt;E&amp;gt; list, E val, List&amp;lt;? extends E&amp;gt; newVals) {
    for (ListIterator&amp;lt;E&amp;gt; it = list.listIterator(); it.hasNext(); ){
        if (val == null ? it.next() == null : val.equals(it.next())) {
            it.remove();
            for (E e : newVals)
                it.add(e);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Range-view&lt;/code&gt; — The &lt;code&gt;sublist&lt;/code&gt; method performs arbitrary &lt;em&gt;range operations&lt;/em&gt; on the list.&lt;/p&gt;
&lt;p&gt;removes a range of elements from a &lt;code&gt;List&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;list.subList(fromIndex, toIndex).clear();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;search for an element in a range&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;int i = list.subList(fromIndex, toIndex).indexOf(o);
int j = list.subList(fromIndex, toIndex).lastIndexOf(o);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;List&amp;lt;String&amp;gt; lnkLst = new LinkedList&amp;lt;String&amp;gt;();
lnkLst.add(&amp;quot;element1&amp;quot;);
Iterator&amp;lt;String&amp;gt; itr = lnkLst.iterator();
for (Iterator&amp;lt;String&amp;gt; it = lnkLst.iterator(); it.hasNext(); )
    String str = (String) itr.next();
    System.out.print(str + &amp;quot; &amp;quot;);
System.out.println();
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;var staff = new LinkedList&amp;lt;String&amp;gt;();
staff.add(&amp;quot;Amy&amp;quot;);
staff.add(&amp;quot;Bob&amp;quot;);
staff.add(&amp;quot;Carl&amp;quot;);
ListIterator&amp;lt;String&amp;gt; iter = staff.listIterator();
iter.next(); // skip past first element
iter.add(&amp;quot;Juliet&amp;quot;);      // staff ==&amp;gt; [Amy, Juliet, Bob, Carl]
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;ArrayList&amp;lt;Employee&amp;gt; staff = new ArrayList&amp;lt;Employee&amp;gt;();
staff.add(new Employee(&amp;quot;Harry Hacker&amp;quot;, . . .));
staff.ensureCapacity(100);
ArrayList&amp;lt;Employee&amp;gt; staff = new ArrayList&amp;lt;&amp;gt;(100);
staff.size()

new ArrayList&amp;lt;&amp;gt;(100) // capacity is 100
is not the same as allocating a new array as
Click here to view code image
new Employee[100] // size is 100


trimToSize
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;ArrayList&amp;lt;E&amp;gt;()    // constructs an empty array list.
ArrayList&amp;lt;E&amp;gt;(int initialCapacity)    // constructs an empty array list with the specified capacity.
boolean add(E obj)    // appends obj at the end of the array list. Always returns true.
int size()    // returns the number of elements currently stored in the array list. (Of course, this is never larger than the array list’s capacity.)
void ensureCapacity(int capacity)    // ensures that the array list has the capacity to store the given number of elements without reallocating its internal storage array.
void trimToSize()    // reduces the storage capacity of the array list to its current size.
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;ArrayList&amp;lt;String&amp;gt; staff = new ArrayList&amp;lt;String&amp;gt;();
staff.add(new String(&amp;quot;Harry Hacker&amp;quot;));
staff.ensureCapacity(100);
staff.size()                                      // ==&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;the-queue-interface&#34;&gt;The Queue Interface&lt;/h4&gt;
&lt;h4 id=&#34;the-deque-interface&#34;&gt;The Deque Interface&lt;/h4&gt;
&lt;h4 id=&#34;the-map-interface&#34;&gt;The Map Interface&lt;/h4&gt;
&lt;h4 id=&#34;object-ordering&#34;&gt;Object Ordering&lt;/h4&gt;
&lt;h4 id=&#34;the-sortedset-interface&#34;&gt;The SortedSet Interface&lt;/h4&gt;
&lt;h4 id=&#34;the-sortedmap-interface&#34;&gt;The SortedMap Interface&lt;/h4&gt;
&lt;h3 id=&#34;aggregate-operations&#34;&gt;Aggregate Operations&lt;/h3&gt;
&lt;h3 id=&#34;algorithms&#34;&gt;Algorithms&lt;/h3&gt;
&lt;h2 id=&#34;lambda-expressions&#34;&gt;Lambda Expressions&lt;/h2&gt;
&lt;h2 id=&#34;date-time-apis&#34;&gt;Date-Time APIs&lt;/h2&gt;
&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;
&lt;p&gt;How to package applications and &lt;strong&gt;applets&lt;/strong&gt; using JAR files, and deploy them using Java Web Start and Java Plug-in.
Preparation for Java Programming Language Certification — List of available training and tutorial resources.&lt;/p&gt;
&lt;h2 id=&#34;internationalization&#34;&gt;Internationalization&lt;/h2&gt;
&lt;h2 id=&#34;reflection&#34;&gt;Reflection&lt;/h2&gt;
&lt;h2 id=&#34;middleware-server-side-or-web-application&#34;&gt;Middleware, server-side, or web application&lt;/h2&gt;
&lt;h3 id=&#34;jdbc-database-access&#34;&gt;JDBC Database Access&lt;/h3&gt;
&lt;h3 id=&#34;concurrency&#34;&gt;Concurrency&lt;/h3&gt;
&lt;h2 id=&#34;standard-edition&#34;&gt;Standard Edition&lt;/h2&gt;
&lt;p&gt;java&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;io&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BufferedReader&lt;/li&gt;
&lt;li&gt;BufferedWriter&lt;/li&gt;
&lt;li&gt;ByteArrayInputStream&lt;/li&gt;
&lt;li&gt;ByteArrayOutputStream&lt;/li&gt;
&lt;li&gt;File&lt;/li&gt;
&lt;li&gt;FileFilter&lt;/li&gt;
&lt;li&gt;FileInputStream&lt;/li&gt;
&lt;li&gt;FileOutputStream&lt;/li&gt;
&lt;li&gt;IOException&lt;/li&gt;
&lt;li&gt;InputStream&lt;/li&gt;
&lt;li&gt;IntputStreamReader&lt;/li&gt;
&lt;li&gt;OutputStream&lt;/li&gt;
&lt;li&gt;OutputStreamWriter&lt;/li&gt;
&lt;li&gt;PrintWriter&lt;/li&gt;
&lt;li&gt;Reader&lt;/li&gt;
&lt;li&gt;Serializable&lt;/li&gt;
&lt;li&gt;StringReader&lt;/li&gt;
&lt;li&gt;StringWriter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lang&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reflect
&lt;ul&gt;
&lt;li&gt;Field&lt;/li&gt;
&lt;li&gt;Method&lt;/li&gt;
&lt;li&gt;InvocationTargetException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;math&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BigDecimal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;net&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HttpURLConnection&lt;/li&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;URLConnection&lt;/li&gt;
&lt;li&gt;URLDecoder&lt;/li&gt;
&lt;li&gt;URLEncoder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;charset
&lt;ul&gt;
&lt;li&gt;Charset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;security&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MessageDigest&lt;/li&gt;
&lt;li&gt;SecureRandom&lt;/li&gt;
&lt;li&gt;InvalidAlgorithmParameterException&lt;/li&gt;
&lt;li&gt;InvalidKeyException&lt;/li&gt;
&lt;li&gt;KeyManagementException&lt;/li&gt;
&lt;li&gt;NoSuchAlgorithmException&lt;/li&gt;
&lt;li&gt;NoSuchProviderException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sql&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;ResultSet&lt;/li&gt;
&lt;li&gt;ResultSetMetaData&lt;/li&gt;
&lt;li&gt;SQLException&lt;/li&gt;
&lt;li&gt;Timestamp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;text&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DateFormat&lt;/li&gt;
&lt;li&gt;DecimalFormat&lt;/li&gt;
&lt;li&gt;MessageFormat&lt;/li&gt;
&lt;li&gt;Normalizer&lt;/li&gt;
&lt;li&gt;NumberFormat&lt;/li&gt;
&lt;li&gt;SimpleDateFormat&lt;/li&gt;
&lt;li&gt;ParseException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;util&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ArrayList&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Arrays&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Base64.Decoder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Base64.Encoder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Calendar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collections&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comparator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enumeration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GregorianCalendar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashMap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashSet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HashMap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Iterator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinkedHashMap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinkedHashSet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinkedList&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Locale&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;formatter.withLocale(Locale.CHINESE).format(apollo11launch);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map.Entry&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Queue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Random&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ResourceBundle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Timer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TimerTask&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TimeZone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UUID&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;concurrent&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ConcurrentHashMap&lt;/li&gt;
&lt;li&gt;ConcurrentLinkedQueue&lt;/li&gt;
&lt;li&gt;Executors&lt;/li&gt;
&lt;li&gt;ScheduledExecutorService&lt;/li&gt;
&lt;li&gt;Semaphore&lt;/li&gt;
&lt;li&gt;TimeUnit&lt;/li&gt;
&lt;li&gt;ExecutionException&lt;/li&gt;
&lt;li&gt;TimeoutException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;util.logging&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Logger&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.util.logging.Logger;
    
public class Main {
    
  private static final Logger logger =
Logger.getLogger(&amp;quot;com.mycompany.myapp&amp;quot;);
    
  public static void main(String[] args) {
    logger.info(&amp;quot;Logging an INFO-level message&amp;quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;regex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Matcher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pattern&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.io.*;
import java.net.*;
import java.nio.charset.*;
import java.util.regex.*;
    
try
{
    String urlString = &amp;quot;http://openjdk.java.net/&amp;quot;;
    
    // read contents of URL
    InputStream in = new URL(urlString).openStream();
    var input = new String(in.readAllBytes(), StandardCharsets.UTF_8);
    
    // search for all occurrences of pattern
    var patternString = &amp;quot;&amp;lt;a\\s+href\\s*=\\s*(\&amp;quot;[^\&amp;quot;]*\&amp;quot;|[^\\s&amp;gt;]*)\\s*&amp;gt;&amp;quot;;
    Pattern pattern = Pattern.compile(patternString, Pattern.CASE_INSENSITIVE);
    pattern.matcher(input)
    .results()
    .map(MatchResult::group)
    .forEach(System.out::println);
}
catch (IOException | PatternSyntaxException e)
{
    e.printStackTrace();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stream&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collectors
&lt;ul&gt;
&lt;li&gt;toSet()&lt;/li&gt;
&lt;li&gt;toList()&lt;/li&gt;
&lt;li&gt;toMap()&lt;/li&gt;
&lt;li&gt;joining()&lt;/li&gt;
&lt;li&gt;toCollection()&lt;/li&gt;
&lt;li&gt;summarizingInt()&lt;/li&gt;
&lt;li&gt;groupingByConcurrent()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;import java.util.List;
import java.util.Map;
import java.util.HashMap;&lt;/p&gt;
&lt;p&gt;import java.util.Date;
import java.io.Serializable;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/javafx/2/collections/jfxpub-collections.htm&#34;&gt;https://docs.oracle.com/javafx/2/collections/jfxpub-collections.htm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;extension&#34;&gt;extension&lt;/h3&gt;
&lt;p&gt;javax&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;activation
&lt;ul&gt;
&lt;li&gt;DataHandler&lt;/li&gt;
&lt;li&gt;MimetypesFileTypeMap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;crypto
&lt;ul&gt;
&lt;li&gt;BadPaddingException&lt;/li&gt;
&lt;li&gt;Cipher&lt;/li&gt;
&lt;li&gt;IllegalBlockSizeException&lt;/li&gt;
&lt;li&gt;NoSuchPaddingException&lt;/li&gt;
&lt;li&gt;spec
&lt;ul&gt;
&lt;li&gt;IvParameterSpec&lt;/li&gt;
&lt;li&gt;SecretKeySpec&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;net
&lt;ul&gt;
&lt;li&gt;ssl
&lt;ul&gt;
&lt;li&gt;HostnameVerifier&lt;/li&gt;
&lt;li&gt;HttpsURLConnection&lt;/li&gt;
&lt;li&gt;SSLSession&lt;/li&gt;
&lt;li&gt;SSLContext&lt;/li&gt;
&lt;li&gt;TrustManager&lt;/li&gt;
&lt;li&gt;X509TrustManager&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;script
&lt;ul&gt;
&lt;li&gt;ScriptException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;security
&lt;ul&gt;
&lt;li&gt;auth
&lt;ul&gt;
&lt;li&gt;login
&lt;ul&gt;
&lt;li&gt;LoginException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;xml
&lt;ul&gt;
&lt;li&gt;bind
&lt;ul&gt;
&lt;li&gt;Unmarshaller&lt;/li&gt;
&lt;li&gt;JAXBContext&lt;/li&gt;
&lt;li&gt;annotation
&lt;ul&gt;
&lt;li&gt;XmlAccessType&lt;/li&gt;
&lt;li&gt;XmlAccessorType&lt;/li&gt;
&lt;li&gt;XmlElement&lt;/li&gt;
&lt;li&gt;XmlElementWrapper&lt;/li&gt;
&lt;li&gt;XmlRootElement&lt;/li&gt;
&lt;li&gt;XmlType&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;namespace
&lt;ul&gt;
&lt;li&gt;QName&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;parsers
&lt;ul&gt;
&lt;li&gt;DocumentBuilder&lt;/li&gt;
&lt;li&gt;DocumentBuilderFactory&lt;/li&gt;
&lt;li&gt;SAXParser&lt;/li&gt;
&lt;li&gt;SAXParserFactory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;soap
&lt;ul&gt;
&lt;li&gt;SOAPBody&lt;/li&gt;
&lt;li&gt;SOAPBodyElement&lt;/li&gt;
&lt;li&gt;SOAPEnvelope&lt;/li&gt;
&lt;li&gt;SOAPMessage&lt;/li&gt;
&lt;li&gt;SOAPPart&lt;/li&gt;
&lt;li&gt;SOAPException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;enterprise-edition&#34;&gt;Enterprise Edition&lt;/h2&gt;
&lt;p&gt;javax&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inject
&lt;ul&gt;
&lt;li&gt;Inject&lt;/li&gt;
&lt;li&gt;Named&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;jms
&lt;ul&gt;
&lt;li&gt;Message&lt;/li&gt;
&lt;li&gt;MessageListener&lt;/li&gt;
&lt;li&gt;TextMessage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;persistence
&lt;ul&gt;
&lt;li&gt;Transient&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;servlet
&lt;ul&gt;
&lt;li&gt;Filter&lt;/li&gt;
&lt;li&gt;FilterChain&lt;/li&gt;
&lt;li&gt;FilterConfig&lt;/li&gt;
&lt;li&gt;ServletInputStream&lt;/li&gt;
&lt;li&gt;ServletOutputStream&lt;/li&gt;
&lt;li&gt;ServletRequest&lt;/li&gt;
&lt;li&gt;ServletResponse&lt;/li&gt;
&lt;li&gt;ServletException&lt;/li&gt;
&lt;li&gt;http
&lt;ul&gt;
&lt;li&gt;Cookie&lt;/li&gt;
&lt;li&gt;HttpServlet&lt;/li&gt;
&lt;li&gt;HttpServletRequest&lt;/li&gt;
&lt;li&gt;HttpServletResponse&lt;/li&gt;
&lt;li&gt;HttpServletRequestWrapper&lt;/li&gt;
&lt;li&gt;HttpServletResponseWrapper&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;transaction
&lt;ul&gt;
&lt;li&gt;Transactional&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ws
&lt;ul&gt;
&lt;li&gt;rs
&lt;ul&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;li&gt;POST&lt;/li&gt;
&lt;li&gt;PUT&lt;/li&gt;
&lt;li&gt;Path&lt;/li&gt;
&lt;li&gt;PathParam&lt;/li&gt;
&lt;li&gt;Produces&lt;/li&gt;
&lt;li&gt;QueryParam&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;core
&lt;ul&gt;
&lt;li&gt;Context&lt;/li&gt;
&lt;li&gt;MediaType&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.DELETE;
import javax.ws.rs.Produces;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;&lt;/p&gt;
&lt;p&gt;import javax.servlet.http.HttpServlet;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/cd/E19226-01/820-7627/6nisfjmk8/index.html&#34;&gt;https://docs.oracle.com/cd/E19226-01/820-7627/6nisfjmk8/index.html&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Mybatis Spring Boot</title>
      <link>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/mybatis-spring-boot/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/mybatis-spring-boot/</guid>
      
        <description>&lt;h2 id=&#34;creating-a-project&#34;&gt;Creating a project&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;spring init -d=web --build=maven mysite
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;declare-dependencies&#34;&gt;Declare Dependencies&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cd mysite
vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.liquibase&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;liquibase-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.10.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.mybatis.spring.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mybatis-spring-boot-starter&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.1.3&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;8.0.20&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MyBatis-Spring-Boot-Starter will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Autodetect an existing &lt;code&gt;DataSource&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Will create and register an instance of a &lt;code&gt;SqlSessionFactory&lt;/code&gt; passing that &lt;code&gt;DataSource&lt;/code&gt; as an input using the &lt;code&gt;SqlSessionFactoryBean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Will create and register an instance of a &lt;code&gt;SqlSessionTemplate&lt;/code&gt; got out of the &lt;code&gt;SqlSessionFactory&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Auto-scan your mappers, link them to the &lt;code&gt;SqlSessionTemplate&lt;/code&gt; and register them to Spring context so they can be injected into your beans&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;applicationproperties&#34;&gt;application.properties&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/discovery?characterEncoding=utf8&amp;amp;zeroDateTimeBehavior=convertToNull&amp;amp;useSSL=false&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=GMT%2B8&amp;amp;nullCatalogMeansCurrent=true&amp;amp;allowPublicKeyRetrieval=true
spring.datasource.driver=com.mysql.cj.jdbc.Driver

# https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/html/howto-database-initialization.html#howto-execute-liquibase-database-migrations-on-startup
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true
spring.liquibase.contexts=dev, faker
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;dbchangelog&#34;&gt;dbchangelog&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/resources/db/changelog/db.changelog-master.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;databaseChangeLog
        xmlns=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog&amp;quot;
        xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
        xsi:schemaLocation=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog
	  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd&amp;quot;&amp;gt;
    &amp;lt;include file=&amp;quot;db/changelog/db.changelog-1.0.xml&amp;quot; relativeToChangelogFile=&amp;quot;false&amp;quot;/&amp;gt;
&amp;lt;/databaseChangeLog&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/resources/db/changelog/db.changelog-1.0.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;databaseChangeLog
        xmlns=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog&amp;quot;
        xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
        xsi:schemaLocation=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd&amp;quot;&amp;gt;
&amp;lt;/databaseChangeLog&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;run-a-spring-boot-application&#34;&gt;Run a spring boot application&lt;/h3&gt;
&lt;p&gt;Hot Swapping&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;
        &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
        &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;!-- enable forking --&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;fork&amp;gt;true&amp;lt;/fork&amp;gt;
            &amp;lt;/configuration&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run a created application using the Spring Boot Maven Plugin.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
  &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
  &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
&amp;lt;/properties&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;
  &amp;lt;plugins&amp;gt;
    &amp;lt;plugin&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;3.6.1&amp;lt;/version&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
        &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
      &amp;lt;/configuration&amp;gt;
    &amp;lt;/plugin&amp;gt;
  &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;./mvnw spring-boot:run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Database generate two table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DATABASECHANGELOG&lt;/li&gt;
&lt;li&gt;DATABASECHANGELOGLOCK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;atabasechangelog ：用于 Liquibase 操作记录，以行的形式跟踪每个&lt;/strong&gt;*&lt;strong&gt;变更集*****，并由“ id”，“ author”和“ filename”列的组合标识。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;databasechangeloglock ：来确保一次仅运行一个&lt;/strong&gt; &lt;strong&gt;Liquibase&lt;/strong&gt; &lt;strong&gt;实例。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-table&#34;&gt;Create table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/resources/db/changelog/db.changelog-1.0.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;databaseChangeLog
        xmlns=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog&amp;quot;
        xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
        xsi:schemaLocation=&amp;quot;http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd&amp;quot;&amp;gt;

    &amp;lt;changeSet author=&amp;quot;liquibase-docs&amp;quot; id=&amp;quot;create-city&amp;quot;&amp;gt;
        &amp;lt;preConditions onFail=&amp;quot;MARK_RAN&amp;quot;&amp;gt;
            &amp;lt;not&amp;gt;
                &amp;lt;tableExists tableName=&amp;quot;city&amp;quot;/&amp;gt;
            &amp;lt;/not&amp;gt;
        &amp;lt;/preConditions&amp;gt;
        &amp;lt;createTable remarks=&amp;quot;城市&amp;quot; tableName=&amp;quot;city&amp;quot;&amp;gt;
            &amp;lt;column name=&amp;quot;id&amp;quot; type=&amp;quot;BIGINT&amp;quot; autoIncrement=&amp;quot;true&amp;quot;&amp;gt;
                &amp;lt;constraints primaryKey=&amp;quot;true&amp;quot;/&amp;gt;
            &amp;lt;/column&amp;gt;
            &amp;lt;column name=&amp;quot;name&amp;quot; remarks=&amp;quot;名称&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;state&amp;quot; remarks=&amp;quot;州&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;country&amp;quot; remarks=&amp;quot;国家&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
        &amp;lt;/createTable&amp;gt;
    &amp;lt;/changeSet&amp;gt;

    &amp;lt;changeSet author=&amp;quot;liquibase-docs&amp;quot; id=&amp;quot;create-hotel&amp;quot;&amp;gt;
        &amp;lt;preConditions onFail=&amp;quot;MARK_RAN&amp;quot;&amp;gt;
            &amp;lt;not&amp;gt;
                &amp;lt;tableExists tableName=&amp;quot;hotel&amp;quot;/&amp;gt;
            &amp;lt;/not&amp;gt;
        &amp;lt;/preConditions&amp;gt;
        &amp;lt;createTable remarks=&amp;quot;酒店&amp;quot; tableName=&amp;quot;hotel&amp;quot;&amp;gt;
            &amp;lt;column name=&amp;quot;id&amp;quot; type=&amp;quot;BIGINT&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;city&amp;quot; remarks=&amp;quot;城市&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;name&amp;quot; remarks=&amp;quot;名称&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;address&amp;quot; remarks=&amp;quot;地址&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
            &amp;lt;column name=&amp;quot;zip&amp;quot; remarks=&amp;quot;邮编&amp;quot; type=&amp;quot;VARCHAR(255)&amp;quot;/&amp;gt;
        &amp;lt;/createTable&amp;gt;
    &amp;lt;/changeSet&amp;gt;

&amp;lt;/databaseChangeLog&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-a-domain-class&#34;&gt;Create a domain class&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir src/main/java/com/example/mysite/domain
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/City.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite.domain;

import java.io.Serializable;

public class City implements Serializable {

  private static final long serialVersionUID = 1L;

  private Long id;

  private String name;

  private String state;

  private String country;

  public Long getId() {
    return this.id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getState() {
    return this.state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public String getCountry() {
    return this.country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  @Override
  public String toString() {
    return getId() + &amp;quot;,&amp;quot; + getName() + &amp;quot;,&amp;quot; + getState() + &amp;quot;,&amp;quot; + getCountry();
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/domain/Hotel.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite.domain;

import java.io.Serializable;

public class Hotel implements Serializable {

  private static final long serialVersionUID = 1L;

  private Long city;

  private String name;

  private String address;

  private String zip;

  public Long getCity() {
    return city;
  }

  public void setCity(Long city) {
    this.city = city;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  @Override
  public String toString() {
    return getCity() + &amp;quot;,&amp;quot; + getName() + &amp;quot;,&amp;quot; + getAddress() + &amp;quot;,&amp;quot; + getZip();
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-a-dao&#34;&gt;Create a DAO&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir src/main/java/com/example/mysite/dao
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/dao/CityDao.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite.dao;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Component;

import com.example.mysite.domain.City;

@Component
public class CityDao {

    private final SqlSession sqlSession;

    public CityDao(SqlSession sqlSession) {
        this.sqlSession = sqlSession;
    }

    public City selectCityById(long id) {
      return this.sqlSession.selectOne(&amp;quot;selectCityById&amp;quot;, id);
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;create-a-mapper-interface&#34;&gt;Create a mapper interface&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;mkdir src/main/java/com/example/mysite/mapper
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/mapper/HotelMapper.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite.mapper;

import org.apache.ibatis.annotations.Mapper;

import com.example.mysite.domain.Hotel;

@Mapper
public interface HotelMapper {
  Hotel selectByCityId(int cityId);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;writer-mapper-file&#34;&gt;Writer mapper file&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p src/main/resources/com/example/mysite/mapper
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/resources/com/example/mysite/mapper/CityMapper.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;!DOCTYPE mapper
        PUBLIC &amp;quot;-//mybatis.org//DTD Mapper 3.0//EN&amp;quot;
        &amp;quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;quot;&amp;gt;
&amp;lt;mapper namespace=&amp;quot;com.example.mysite.mapper.CityMapper&amp;quot;&amp;gt;
    &amp;lt;select id=&amp;quot;selectCityById&amp;quot; resultType=&amp;quot;City&amp;quot;&amp;gt;
        select id, name, state, country from city where id = #{id}
    &amp;lt;/select&amp;gt;
&amp;lt;/mapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/resources/com/example/mysite/mapper/HotelMapper.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;!DOCTYPE mapper
        PUBLIC &amp;quot;-//mybatis.org//DTD Mapper 3.0//EN&amp;quot;
        &amp;quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;quot;&amp;gt;
&amp;lt;mapper namespace=&amp;quot;com.example.mysite.mapper.HotelMapper&amp;quot;&amp;gt;
    &amp;lt;select id=&amp;quot;selectByCityId&amp;quot; resultType=&amp;quot;Hotel&amp;quot;&amp;gt;
        select city, name, address, zip from hotel where city = #{id}
    &amp;lt;/select&amp;gt;
&amp;lt;/mapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;modify-a-spring-boot-application-class&#34;&gt;Modify a spring boot application class&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/DemoApplication.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.example.mysite.dao.CityDao;
import com.example.mysite.mapper.HotelMapper;

@SpringBootApplication
public class DemoApplication implements CommandLineRunner {

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }

    private final CityDao cityDao;
    private final HotelMapper hotelMapper;

    public DemoApplication(CityDao cityDao, HotelMapper hotelMapper) {
        this.cityDao = cityDao;
        this.hotelMapper = hotelMapper;
    }

    @Override
    @SuppressWarnings(&amp;quot;squid:S106&amp;quot;)
    public void run(String... args) {
        System.out.println(this.cityDao.selectCityById(1));
        System.out.println(this.hotelMapper.selectByCityId(1));
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;mybatis-configuration&#34;&gt;Mybatis Configuration&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/resources/application.properties
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mybatis.config-location=classpath:mybatis-config.xml
logging.level.root=WARN
logging.level.com.example.mysite.mapper=TRACE
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/resources/mybatis-config.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE configuration
        PUBLIC &amp;quot;-//mybatis.org//DTD Config 3.0//EN&amp;quot;
        &amp;quot;http://mybatis.org/dtd/mybatis-3-config.dtd&amp;quot;&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;typeAliases&amp;gt;
        &amp;lt;package name=&amp;quot;com.example.mysite.domain&amp;quot;/&amp;gt;
    &amp;lt;/typeAliases&amp;gt;
    &amp;lt;mappers&amp;gt;
        &amp;lt;mapper resource=&amp;quot;com/example/mysite/mapper/CityMapper.xml&amp;quot;/&amp;gt;
        &amp;lt;mapper resource=&amp;quot;com/example/mysite/mapper/HotelMapper.xml&amp;quot;/&amp;gt;
    &amp;lt;/mappers&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
    <item>
      <title>Spring</title>
      <link>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/spring/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/spring/</guid>
      
        <description>&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;install-jdk&#34;&gt;Install JDK&lt;/h3&gt;
&lt;p&gt;Download &lt;code&gt;jdk-8u261-linux-x64.tar.gz&lt;/code&gt; from Oracle&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S jdk8-openjdk
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim ~/.bashrc 
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-8-openjdk
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;install-maven&#34;&gt;Install maven&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S maven
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;cp /opt/maven/conf/settings.xml ~/.m2/
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim ~/.m2/settings.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;mirror&amp;gt;
  &amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;
  &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;
  &amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public&amp;lt;/url&amp;gt;
&amp;lt;/mirror&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;installing-the-spring-boot-cli&#34;&gt;Installing the Spring Boot CLI&lt;/h3&gt;
&lt;p&gt;Download  the Spring Boot CLI&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://repo.spring.io/snapshot/org/springframework/boot/spring-boot-cli/2.3.3.BUILD-SNAPSHOT/spring-boot-cli-2.3.3.BUILD-SNAPSHOT-bin.zip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Extract  to a directory that supports file execution.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo unzip spring-boot-cli-2.3.3.BUILD-SNAPSHOT-bin.zip -d /opt/
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim ~/.bashrc 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add the following line to the file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/opt/spring-2.3.3.BUILD-SNAPSHOT/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use the source command to force Linux to reload the &lt;code&gt;.bashrc&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;spring-at-a-glance&#34;&gt;Spring at a glance&lt;/h2&gt;
&lt;h3 id=&#34;creating-a-project&#34;&gt;Creating a project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;spring help init
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;spring init --list
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;spring init -d=web,mybatis,mysql --build=maven mysite
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;add-your-code&#34;&gt;Add your code&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite/DemoApplication.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
@RestController
public class DemoApplication {
	
    public static void main(String[] args) {
    	SpringApplication.run(DemoApplication.class, args);
    }

    @GetMapping(&amp;quot;/hello&amp;quot;)
    public String hello(@RequestParam(value = &amp;quot;name&amp;quot;, defaultValue = &amp;quot;World&amp;quot;) String name) {
        return String.format(&amp;quot;Hello %s!&amp;quot;, name);
    }
}            
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;use-the-compiler-plugin&#34;&gt;Use the Compiler Plugin&lt;/h3&gt;
&lt;h6 id=&#34;maven-java-compiler-properties&#34;&gt;Maven Java Compiler Properties&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
  &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
  &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
&amp;lt;/properties&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;maven-java-compiler-plugin&#34;&gt;Maven Java Compiler Plugin&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;
  &amp;lt;plugins&amp;gt;
    &amp;lt;plugin&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;3.6.1&amp;lt;/version&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
        &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
      &amp;lt;/configuration&amp;gt;
    &amp;lt;/plugin&amp;gt;
  &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;hot-swapping&#34;&gt;Hot Swapping&lt;/h3&gt;
&lt;h4 id=&#34;developer-tools&#34;&gt;Developer Tools&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;
        &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
        &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;!-- enable forking --&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;fork&amp;gt;true&amp;lt;/fork&amp;gt;
            &amp;lt;/configuration&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;automatic-restart&#34;&gt;Automatic Restart&lt;/h4&gt;
&lt;p&gt;Triggering a restart&lt;/p&gt;
&lt;p&gt;As DevTools monitors classpath resources, the only way to trigger a restart is to update the classpath. The way in which you cause the classpath to be updated depends on the IDE that you are using. In Eclipse, saving a modified file causes the classpath to be updated and triggers a restart. In IntelliJ IDEA, &lt;strong&gt;building the project&lt;/strong&gt; (&lt;code&gt;Build +→+ Build Project&lt;/code&gt;) has the same effect.&lt;/p&gt;
&lt;p&gt;As long as forking is enabled, you can also start your application by using the supported build plugins (Maven and Gradle), since DevTools needs an isolated application classloader to operate properly. By default, the Gradle and Maven plugins fork the application process.&lt;/p&gt;
&lt;p&gt;If start application by command line, manually execute command &lt;strong&gt;compilation&lt;/strong&gt; after code change:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./mvnw compile
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;run-the-server&#34;&gt;Run the server&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;./mvnw spring-boot:run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that the server’s running, visit http://localhost:8080/hello with your Web browser.&lt;/p&gt;
&lt;p&gt;Then, depending on the development environment you use, after a change to Java code is made, you might need to &lt;strong&gt;build your project.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you start your Spring Boot app with &lt;strong&gt;java -jar&lt;/strong&gt;, the How Swap will not work even if you add the &lt;strong&gt;spring-boot-devtools&lt;/strong&gt; dependency.&lt;/p&gt;
&lt;h2 id=&#34;structuring-your-code&#34;&gt;Structuring Your Code&lt;/h2&gt;
&lt;p&gt;The following listing shows a typical layout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;com
 +- example
     +- myapplication
         +- Application.java
         |
         +- customer
         |   +- Customer.java
         |   +- CustomerController.java
         |   +- CustomerService.java
         |   +- CustomerRepository.java
         |
         +- order
             +- Order.java
             +- OrderController.java
             +- OrderService.java
             +- OrderRepository.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;com
 +- example
     +- myapplication
         +- Application.java
         |
         +- config - class which will read from property files
         +- cache - caching mechanism class files
         +- controller - controller clwass
         +- dao - Data Access Object
         +- domain - @Entity 
         +- dto - Data Transfer Object
         +- exception - exception class  
         +- model - pojos classes will be present
         +- repository - @Repository
         +- security - security classes
         +- service - Impl classes
         +- utils - utility classes
         +- validation - validators classes
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;tutorial&#34;&gt;Tutorial&lt;/h2&gt;
&lt;h3 id=&#34;building-java-projects-with-maven&#34;&gt;Building Java Projects with Maven&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir mysite
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mkdir -p src/main/java/hello
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/hello/HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package hello;

public class HelloWorld {
  public static void main(String[] args) {
    Greeter greeter = new Greeter();
    System.out.println(greeter.sayHello());
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/hello/Greeter.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package hello;

public class Greeter {
  public String sayHello() {
    return &amp;quot;Hello world!&amp;quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;define-a-simple-maven-build&#34;&gt;Define a simple Maven build&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
    xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;gs-maven&amp;lt;/artifactId&amp;gt;
    &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;
    &amp;lt;version&amp;gt;0.1.0&amp;lt;/version&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
        &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;transformers&amp;gt;
                                &amp;lt;transformer
                                    implementation=&amp;quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&amp;quot;&amp;gt;
                                    &amp;lt;mainClass&amp;gt;hello.HelloWorld&amp;lt;/mainClass&amp;gt;
                                &amp;lt;/transformer&amp;gt;
                            &amp;lt;/transformers&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;build-java-code&#34;&gt;Build Java code&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;mvn compile
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mvn package
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;java -jar target/mysite-0.1.0.jar
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;declare-dependencies&#34;&gt;Declare Dependencies&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;joda-time&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;joda-time&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;2.9.2&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/main/java/hello/HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package hello;

import org.joda.time.LocalTime;

public class HelloWorld {
  public static void main(String[] args) {
    LocalTime currentTime = new LocalTime();
    System.out.println(&amp;quot;The current local time is: &amp;quot; + currentTime);
    Greeter greeter = new Greeter();
    System.out.println(greeter.sayHello());
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;write-a-test&#34;&gt;Write a Test&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
	&amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
	&amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
	&amp;lt;version&amp;gt;4.12&amp;lt;/version&amp;gt;
	&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mkdir -p src/test/java/hello
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;vim src/test/java/hello/GreeterTest.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package hello;

import static org.hamcrest.CoreMatchers.containsString;
import static org.junit.Assert.*;

import org.junit.Test;

public class GreeterTest {

  private Greeter greeter = new Greeter();

  @Test
  public void greeterSaysHello() {
    assertThat(greeter.sayHello(), containsString(&amp;quot;Hello&amp;quot;));
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mvn test
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;building-an-application-with-spring-boot&#34;&gt;Building an Application with Spring Boot&lt;/h3&gt;
&lt;h3 id=&#34;mybatis-integration-with-spring-boot&#34;&gt;MyBatis integration with Spring Boot&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;spring init -d=web,mybatis,h2 --build=maven mysite_mybatis
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;create-sql-files&#34;&gt;Create sql files&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/resources/schema.sql
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;CREATE TABLE city
(
  id      INT PRIMARY KEY auto_increment,
  name    VARCHAR,
  state   VARCHAR,
  country VARCHAR
);
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;create-a-domain-class&#34;&gt;Create a domain class&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite_mybatis/City.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite_mybatis;

public class City {

  private Long id;
  private String name;
  private String state;
  private String country;

  public Long getId() {
    return this.id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getState() {
    return this.state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public String getCountry() {
    return this.country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  @Override
  public String toString() {
    return getId() + &amp;quot;,&amp;quot; + getName() + &amp;quot;,&amp;quot; + getState() + &amp;quot;,&amp;quot; + getCountry();
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;create-a-mapper-interface&#34;&gt;Create a mapper interface&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite_mybatis/CityMapper.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite_mybatis;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Select;

@Mapper
public interface CityMapper {

  @Insert(&amp;quot;INSERT INTO city (name, state, country) VALUES(#{name}, #{state}, #{country})&amp;quot;)
  @Options(useGeneratedKeys = true, keyProperty = &amp;quot;id&amp;quot;)
  void insert(City city);

  @Select(&amp;quot;SELECT id, name, state, country FROM city WHERE id = #{id}&amp;quot;)
  City findById(long id);

}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;modify-a-spring-boot-application-class&#34;&gt;Modify a spring boot application class&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vim src/main/java/com/example/mysite_mybatis/DemoApplication.java
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;package com.example.mysite_mybatis;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class DemoApplication {

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }

    public DemoApplication(CityMapper cityMapper) {
        this.cityMapper = cityMapper;
    }

    @Bean
    CommandLineRunner sampleCommandLineRunner() {
        return args -&amp;gt; {
            City city = new City();
            city.setName(&amp;quot;San Francisco&amp;quot;);
            city.setState(&amp;quot;CA&amp;quot;);
            city.setCountry(&amp;quot;US&amp;quot;);
            cityMapper.insert(city);
            System.out.println(this.cityMapper.findById(city.getId()));
        };
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;run-a-spring-boot-application&#34;&gt;Run a spring boot application&lt;/h6&gt;
&lt;p&gt;Run a created application using the Spring Boot Maven Plugin.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
  &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
  &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
&amp;lt;/properties&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;build&amp;gt;
  &amp;lt;plugins&amp;gt;
    &amp;lt;plugin&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;3.6.1&amp;lt;/version&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
        &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
      &amp;lt;/configuration&amp;gt;
    &amp;lt;/plugin&amp;gt;
  &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/using-spring-boot.html&#34;&gt;Using Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>Spring Boot CXF JAX-RS Starter</title>
      <link>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/spring-boot-cxf-jax-rs-starter/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/spring-boot-cxf-jax-rs-starter/</guid>
      
        <description>&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;Registers CXF Servlet with a  &amp;ldquo;/services/*&amp;rdquo; URL pattern for serving CXF JAX-RS endpoints.&lt;/p&gt;
&lt;p&gt;Optionally auto-discovers JAX-RS root resources and providers and creates a JAX-RS endpoint.&lt;/p&gt;
&lt;p&gt;Note the use of CXF JAX-RS Clients in SpringBoot Application is covered in &lt;a href=&#34;https://cxf.apache.org/docs/jaxrsclientspringboot.html&#34;&gt;this section&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;databases&#34;&gt;Databases&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo docker container start mysql-container-id
sudo docker exec -it mysql-container-name mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;mysql&amp;gt; create database demo;
mysql&amp;gt; USE demo;
mysql&amp;gt; SET FOREIGN_KEY_CHECKS=0;
mysql&amp;gt; DROP TABLE IF EXISTS `student`;
mysql&amp;gt; CREATE TABLE `student` (
    -&amp;gt;   `id` int(10) NOT NULL,
    -&amp;gt;   `name` varchar(100) DEFAULT NULL,
    -&amp;gt;   `sex` char(6) DEFAULT NULL,
    -&amp;gt;   `address` varchar(255) DEFAULT NULL,
    -&amp;gt;   `age` int(10) DEFAULT NULL,
    -&amp;gt;   PRIMARY KEY (`id`)
    -&amp;gt; ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
mysql&amp;gt; INSERT INTO `student` VALUES (&#39;1&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;22&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;creating-a-project&#34;&gt;Creating a project&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;spring init -d=web,mybatis,mysql --build=maven mysite
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;dependency&#34;&gt;dependency&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.cxf&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;cxf-spring-boot-starter-jaxrs&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;
            &amp;lt;exclusions&amp;gt;&amp;lt;!-- CXF uses java.util.logging by default --&amp;gt;
                &amp;lt;exclusion&amp;gt;
                    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                    &amp;lt;artifactId&amp;gt;spring-boot-starter-logging&amp;lt;/artifactId&amp;gt;
                &amp;lt;/exclusion&amp;gt;
            &amp;lt;/exclusions&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.webjars&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;swagger-ui&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${cxf.swagger.ui.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.cxf&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;cxf-rt-rs-service-description-swagger&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.cxf&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;cxf-rt-features-metrics&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
    <item>
      <title>欣宸Blog</title>
      <link>http://csyezheng.github.io/post/engineering-fundamentals/devops/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/engineering-fundamentals/devops/</guid>
      
        <description>&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/column/1662&#34;&gt;https://cloud.tencent.com/developer/column/1662&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>circumvent Internet censorship</title>
      <link>http://csyezheng.github.io/post/any-path/circumvent-internet-censorship/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/any-path/circumvent-internet-censorship/</guid>
      
        <description>&lt;h2 id=&#34;shadowsocks&#34;&gt;Shadowsocks&lt;/h2&gt;
&lt;h2 id=&#34;shadowsocksr&#34;&gt;ShadowsocksR&lt;/h2&gt;
&lt;h3 id=&#34;subscription-address&#34;&gt;subscription address&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ssrsub/ssr/master/ssrsub&#34;&gt;https://raw.githubusercontent.com/ssrsub/ssr/master/ssrsub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yzzz.ml/freessr/&#34;&gt;https://yzzz.ml/freessr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmazingDM/sub/master/ssrshare.com&#34;&gt;https://raw.githubusercontent.com/AmazingDM/sub/master/ssrshare.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://haobang.yangwang.workers.dev/&#34;&gt;https://haobang.yangwang.workers.dev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.yangwang.tk/&#34;&gt;http://www.yangwang.tk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://shadow-socks-share.herokuapp.com/subscribe&#34;&gt;https://shadow-socks-share.herokuapp.com/subscribe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.liesauer.net/yogurt/subscribe?ACCESS_TOKEN=DAYxR3mMaZAsaqUb&#34;&gt;https://www.liesauer.net/yogurt/subscribe?ACCESS_TOKEN=DAYxR3mMaZAsaqUb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://qiaomenzhuanfx.netlify.com/&#34;&gt;https://qiaomenzhuanfx.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://muma16fx.netlify.com/&#34;&gt;https://muma16fx.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/voken100g/AutoSSR/master/online&#34;&gt;https://raw.githubusercontent.com/voken100g/AutoSSR/master/online&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/voken100g/AutoSSR/master/recent&#34;&gt;https://raw.githubusercontent.com/voken100g/AutoSSR/master/recent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youlianboshi.netlify.com/&#34;&gt;https://youlianboshi.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://ss.pythonic.life/full/subscribe&#34;&gt;http://ss.pythonic.life/full/subscribe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nutgeek.cn/newsubscribe/&#34;&gt;https://www.nutgeek.cn/newsubscribe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://prom-php.herokuapp.com/cloudfra_ssr.txt&#34;&gt;https://prom-php.herokuapp.com/cloudfra_ssr.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://share-shadowsocks.herokuapp.com/full/subscribe&#34;&gt;http://share-shadowsocks.herokuapp.com/full/subscribe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://share-shadowsocksr.herokuapp.com/subscribe?valid=1&#34;&gt;http://share-shadowsocksr.herokuapp.com/subscribe?valid=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmazingDM/sub/master/ssrshare.com&#34;&gt;https://raw.githubusercontent.com/AmazingDM/sub/master/ssrshare.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liesauer/Free-SS-SSR&#34;&gt;https://github.com/liesauer/Free-SS-SSR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yzzz.ml/freessr&#34;&gt;https://yzzz.ml/freessr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.liesauer.net/yogurt/subscribe?ACCESS_TOKEN=DAYxR3mMaZAsaqUb&#34;&gt;https://www.liesauer.net/yogurt/subscribe?ACCESS_TOKEN=DAYxR3mMaZAsaqUb&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;free-account&#34;&gt;Free account&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youneed.win/free-ssr&#34;&gt;https://www.youneed.win/free-ssr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://nulastudio.org/Freedom/&#34;&gt;http://nulastudio.org/Freedom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lncn.org/&#34;&gt;https://lncn.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jichangdaquan.com/node/429.html&#34;&gt;https://jichangdaquan.com/node/429.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freess.best/&#34;&gt;https://www.freess.best/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fanqiang.network/&#34;&gt;https://fanqiang.network/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jichangdaquan.com/node/429.html&#34;&gt;https://jichangdaquan.com/node/429.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;v2ray&#34;&gt;V2ray&lt;/h2&gt;
&lt;h3 id=&#34;subscription-address-1&#34;&gt;subscription address&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AmazingDM/sub/master/v2ray_ssrshare.com&#34;&gt;https://raw.githubusercontent.com/AmazingDM/sub/master/v2ray_ssrshare.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jiang.netlify.com/&#34;&gt;https://jiang.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youlianboshi.netlify.com/&#34;&gt;https://youlianboshi.netlify.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/eycorsican/rule-sets/master/kitsunebi_sub&#34;&gt;https://raw.githubusercontent.com/eycorsican/rule-sets/master/kitsunebi_sub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ssrsub/ssr/master/v2ray&#34;&gt;https://raw.githubusercontent.com/ssrsub/ssr/master/v2ray&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bhqt.ltd/?p=236&#34;&gt;https://bhqt.ltd/?p=236&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;free-account-1&#34;&gt;Free account&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://free-ss.site/&#34;&gt;https://free-ss.site/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freess.best/v2ray.html&#34;&gt;https://www.freess.best/v2ray.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freevpnnet.com/&#34;&gt;https://www.freevpnnet.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jichangdaquan.com/node/429.html&#34;&gt;https://jichangdaquan.com/node/429.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://view.freev2ray.org/&#34;&gt;https://view.freev2ray.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://v2ray.cat/&#34;&gt;https://v2ray.cat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://v2ray.party/&#34;&gt;https://v2ray.party/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://my.freev2ray.org/&#34;&gt;https://my.freev2ray.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://v2fire.tk/&#34;&gt;https://v2fire.tk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://get.freev2ray.com/&#34;&gt;https://get.freev2ray.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://freev2.org&#34;&gt;https://freev2.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jichangdaquan.com/node/429.html&#34;&gt;https://jichangdaquan.com/node/429.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hoochanlon/w3-goto-world/blob/master/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E3%80%81%E6%9A%97%E7%BD%91%E3%80%81%E9%9B%B6%E7%BD%91/%E5%85%8D%E8%B4%B9ss%E3%80%81ssr%E3%80%81vmess%E5%88%86%E4%BA%AB/readme.md&#34;&gt;https://github.com/hoochanlon/w3-goto-world/blob/master/科学上网、暗网、零网/免费ss、ssr、vmess分享/readme.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fanqiang.network/shadowsocks-servers&#34;&gt;SHADOWSOCKS服务器信息&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.similarsites.com/&#34;&gt;https://www.similarsites.com&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Question answering</title>
      <link>http://csyezheng.github.io/post/specialization/artificial-intelligence/natural-language-processing/question-answering/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/artificial-intelligence/natural-language-processing/question-answering/</guid>
      
        <description>&lt;p&gt;Reference&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;https://github.com/deepmipt/DeepPavlov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;https://github.com/deepset-ai/FARM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;https://github.com/huggingface/transformers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;https://github.com/deepset-ai/haystack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deepset-ai/COVID-QA&#34;&gt;https://github.com/deepset-ai/COVID-QA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://demo.allennlp.org/reading-comprehension&#34;&gt;https://demo.allennlp.org/reading-comprehension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baidu/AnyQ&#34;&gt;https://github.com/baidu/AnyQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/allenai/bi-att-flow&#34;&gt;https://github.com/allenai/bi-att-flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google-research/language/tree/master/language/question_answering&#34;&gt;https://github.com/google-research/language/tree/master/language/question_answering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aihub.cloud.google.com/p/products%2Ffb38fa2f-f246-43c8-b611-c82948fc6d85&#34;&gt;BERT Question Answering Inference with Mixed Precision in TensorFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/c/tensorflow2-question-answering/&#34;&gt;https://www.kaggle.com/c/tensorflow2-question-answering/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chrischute/squad&#34;&gt;https://github.com/chrischute/squad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ColasGael/QA-squad&#34;&gt;https://github.com/ColasGael/QA-squad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/IBM/MAX-Question-Answering&#34;&gt;https://github.com/IBM/MAX-Question-Answering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.stanford.edu/class/cs224n/project/default-final-project-handout.pdf&#34;&gt;http://web.stanford.edu/class/cs224n/project/default-final-project-handout.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baidu/DuReader&#34;&gt;https://github.com/baidu/DuReader&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>tencent nlp interview</title>
      <link>http://csyezheng.github.io/post/other/interview/tencent-nlp-interview/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/other/interview/tencent-nlp-interview/</guid>
      
        <description>&lt;h2 id=&#34;一面技术面&#34;&gt;一面（技术面）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;面试形式：电话面试&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;简要的自我介绍。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;研究生阶段最有挑战的项目是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于这个项目，传统的方法是怎么样的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列举下这个任务在传统用法的一些典型特征。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看你简历里有QA相关的论文，大概介绍下里面用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你在这篇论文里用到的是GloVe，为何不用word2vec，或者说word2vec与GloVe有什么区别？&lt;/p&gt;
&lt;p&gt;我大致说了下他们的区别：word2vec是NNLM的一个较为典型的代表，其利用了DNN的方法来训练获取到词向量，而且词向量是中间产物，这个思路最早是Bengio提出，Google Brain提出的word2vec让词向量火了起来。而GloVe是采用词频统计信息，利用一些数学方法逐步优化得来，它没有神经网络的结构，所以词向量训练的速度相对更快。（这里当时不记得具体的公式推导了，原论文我倒是看过，但是当时记得不清了，实际上GloVe是词共现矩阵+类SVD的方法）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你清楚word2vec吗，大致描述下word2vec的结构以及训练方法。&lt;/p&gt;
&lt;p&gt;从宏观上描述了DNN的一个结构，从输入（大致带过分词，词表构建，one-hot等过程），到隐层，到输出层。然后详细讲了两种训练结构，即CBoW和Skip-Gram。讲完两种训练方法后，大致介绍了下训练时候词表大小过大，输出层过大的优化方法，即：&lt;strong&gt;hierarchical softmax&lt;/strong&gt;和&lt;strong&gt;negative sampling&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;现阶段NLP的研究相对CV发展还是很缓慢，你认为是什么原因？&lt;/p&gt;
&lt;p&gt;自然语言存在变化性，和不确定性，即语义的抽取对神经网络来说是很难的，在英文，人脑可以通过词形来建立词与词之间的关系，但是语义不确定性很强，比如歧义，一词多义，词序等等都会影响语义。而CV的特征相对固定，如图像处理，filter提取的特征一般是某种轮廓或边缘特征，这些特征对于特定的物体都是固定的，所以效果会更好。（其实总结就是&lt;strong&gt;感知智能&lt;/strong&gt;和&lt;strong&gt;认知智能&lt;/strong&gt;，&lt;strong&gt;感知智能&lt;/strong&gt;很容易实现，即CV，而&lt;strong&gt;认知智能&lt;/strong&gt;有很多挑战，即NLP）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你知道隐马尔可夫模型吗，大概介绍下。&lt;/p&gt;
&lt;p&gt;问了HMM的几个要素，即：初始概率，状态转移矩阵，发射矩阵，这三个要素&lt;/p&gt;
&lt;p&gt;这三个要素的运算过程，提及了一下维特比算法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;维特比算法其实是一种动态规划算法，动态规划算法通常用来解决什么问题，在HMM里是怎么使用的？
大致描述了下动态规划的最优解问题，然后结合HMM的迭代过程说了一些。（面试官应该还是想听到HMM的理论，因为HMM推导会用到它里面的假设，然后得到递推关系，就可以分解为子问题，利用维特比算法求解）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;算法题吧：在一个敏感词过滤的场景下，要怎么在一个字符串里找出敏感词的位置？算法复杂度是多少？
面试官应该是想听到KMP一类的算法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你还有什么问题要问我的吗？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;咱们部门对实习生的预期目标是啥？培养方式和考核方式？&lt;/li&gt;
&lt;li&gt;工作期间的考核情况如何，比如周报、月报、日报这些频繁吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二面技术面&#34;&gt;二面（技术面）&lt;/h2&gt;
&lt;p&gt;二面也是技术，但是和初面不同的是，二面没有那么关注项目了（但是也是从项目开始问），比较注重理论层面。自初面结束之后，有一周时间的空档，我恶补了基础理论知识，首先是对初面的知识查漏补缺，再刷了剑指offer，捡起了李航《统计学习方法》，基本的机器学习算法以及推导。&lt;strong&gt;面试形式：电话面试&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;个人发现，NLP岗位，很多面试官喜欢问：HMM、CRF、LDA这些知识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;看你的简历上，在做一个相似性评估的项目，大致介绍下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;了解，那么获取的词向量你是怎么获取的？&lt;/p&gt;
&lt;p&gt;从word2vec中获取，然后作为模型的输入（讲了一些实验操作）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你的词向量自己训练过吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你知道几种词向量的方法？&lt;/p&gt;
&lt;p&gt;这里说的很详细，我带了一下传统的，如IDF、词袋、LDA，GloVe等偏统计方法，然后具体描述了NNLM下的模型：word2vec（和一面一样，介绍的比较详细），character level CNN Model（英文适用，中文不太适用）；转向RNN结构：传统RNN将序列压缩至向量的过程，LSTM解决RNN长依赖模型，双向语言模型（BiLSTM）；根据双向语言模型，导出了ELMo以及内部细节；主流热门的Transformer系列：Transformer内部细节详细讲了一下，然后转向GPT（Transformer Decoder，单向模型，和之前的双向模型做了个区分），详细说了一下，然后是BERT（Transformer Encoder，双向语言模型，和GPT的对比和ELMo的相同点，以及区别）详解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安利本人译的一篇综述：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/109564205&#34;&gt;邹智鹏：综述：神经网络语言模型（译）zhuanlan.zhihu.com&lt;img src=&#34;https://pic4.zhimg.com/v2-51ab1d559571ce449cd4580b5a47e697_ipico.jpg&#34; alt=&#34;图标&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果觉得翻译不好的话，建议论文阅读原文[ ]。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n元模型了解吗，如果共现频率为零怎么解决？&lt;/p&gt;
&lt;p&gt;大致讲了下ngram与n阶马尔可夫。共现为0的解决方案有点忘记了，但是提了一下在GloVe中有提及这个情况的解决方案，但是我也忘记了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你认为为什么BERT能达到这么好的效果？&lt;/p&gt;
&lt;p&gt;我认为BERT的效果很大程度上取决于Transformer的一个Attention机制，即Self-Attention，正如原文标题《Attention is all you need》，注意力机制很好地找出了文本序列的语义相关度，在语义层面上，能够提取到更关键的特征，比如理解序列中的指示代词。其次是Transformer的结构优势，没有RNN的梯度消失问题，理论上支持任意长度的文本，用了position embedding（区别说明了下Transformer的三角函数和BERT的position embedding的不同）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意力机制你了解多少，或者说你了解哪几种？&lt;/p&gt;
&lt;p&gt;注意力机制最初是在CV领域用的比较多，其次被应用到了NLP领域，并且取得了较好的效果。我主要研究NLP比较多，CV了解不深，所以只了解NLP的两种attention。最早的Attention是在seq2seq中提出（或者说Encoder-Decoder模型），讲了下这个模型注意力机制的细节，以及注意力获取的方式，文献名我忘记了，原始的论文应该是NMT相关场景。然后讲了BERT的Self-Attention细节，比如Q、K、V这些。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里到BERT想要继续向后拓展的时候，被面试官打断了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LSTM你了解吗，它的大致结构是怎么样的？&lt;/p&gt;
&lt;p&gt;大概描述了下它的三个门。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假设输入是$x$维，LSTM的参数量为多少？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正则化你用过吗，有哪些正则化方法？&lt;/p&gt;
&lt;p&gt;有L1、L2正则化，其他的比如Dropout、Batch Normalization不知道算不算，但是它能达到正则化的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本相似性一般有那几种度量方法？&lt;/p&gt;
&lt;p&gt;&lt;em&gt;之前项目里有过这个相似性的问题，我不知道面试官具体想要的点在哪，就先说了下VSM的基础知识，他又再次深入地问了下，可以用什么模型。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;然后我大致说了下常用的方法，比如最简单的word2vec加权，然后用VSM，RNN得到固定维度的向量后，用VSM，以及这一系列的方法。然后补充说了，利用深度学习转化为二分类的问题的思路和方法，以及BERT中的使用，因为BERT是有做文本相似性任务的。 深度学习之外，还有很多方法，比如主题模型、LDA之类的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;序列标注做过吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HMM和CRF有什么区别？&lt;/p&gt;
&lt;p&gt;&lt;em&gt;之前恶补了HMM的理论，详细讲了HMM，但是CRF只有大概了解，就没仔细说。&lt;/em&gt; HMM的2个假设，正向反向算法（递推式推导），EM算法，维特比算法。CRF打破了两个假设，所以效果更好。（说的比较大概，也和面试官说了这部分不是很了解，只知道个大概）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传统机器学习算法了解吗，比如XGBoost和SVM这些？&lt;/p&gt;
&lt;p&gt;了解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;那你讲一下SVM吧。&lt;/p&gt;
&lt;p&gt;讲了下SVM的推导：hard margin, soft margin, 几何距离、函数距离，最优化，拉格朗日乘子法，对偶问题，KKT条件，损失函数，惩罚系数等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么SVM求解要求解他的对偶问题？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其实，是因为对偶问题可以降低原问题的计算复杂度。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三面hr面&#34;&gt;三面（HR面）&lt;/h2&gt;
&lt;p&gt;HR面就不涉及技术了，主要是和HR各种聊，在这之前，看网上很多面经，都说HR面还是很多坑的，即&lt;strong&gt;有套路&lt;/strong&gt;，但是好在面我的HR小哥哥比较真实，没有过分的套路我。&lt;strong&gt;面试形式：视频面试（腾讯会议）&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学校的基本情况，导师是谁，组里的研究方向是啥？&lt;/li&gt;
&lt;li&gt;根据我的研究方向，问了下我们的工作。&lt;/li&gt;
&lt;li&gt;有没有了解行业内你这个领域的一些工作，即你们组的研究方向的落地情况如何？&lt;/li&gt;
&lt;li&gt;聊基本情况，实习时间，毕业要求。&lt;/li&gt;
&lt;li&gt;家庭情况，籍贯、家里成员、父母工作。&lt;/li&gt;
&lt;li&gt;实习地点有没有什么规划？&lt;/li&gt;
&lt;li&gt;HR小哥哥开始介绍他们部门的业务情况，业务方向等等。&lt;/li&gt;
&lt;li&gt;你有没有什么问题？&lt;/li&gt;
&lt;li&gt;那么我这边也没有问题了，整个面试就算通过了，大概一周左右会有通知。（大概意思，算是口头offer）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;小建议&#34;&gt;小建议&lt;/h2&gt;
&lt;p&gt;技术岗，&lt;strong&gt;刷算法题&lt;/strong&gt;！时间来不及就先剑指offer 66道，相对简单，多刷几遍，然后做leetcode。&lt;/p&gt;
&lt;p&gt;算法岗，&lt;strong&gt;基础机器学习算法：SVM、Bayes、DT、Clustering、boosting（Adaboost、GBDT）、bagging（RF）、LR。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;项目，&lt;strong&gt;一定要熟悉，不熟悉的就别往简历上写&lt;/strong&gt;。说不清楚的会被喷的很惨，一定会被diss，甚至会质疑简历真实性。简历上写了的就要再次复盘，要了然于胸，不要忘记了然后讲不明白。&lt;/p&gt;
&lt;p&gt;论文，要熟悉所在领域的一些经典论文模型，里面的细节也要清楚，&lt;strong&gt;最好读原文&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NLP的经典：HMM、CRF、LDA&lt;/strong&gt;，我在很多次面试都碰到这些，重点圈出，个人遭遇，视情况准备吧。&lt;/p&gt;
&lt;p&gt;HR套路，虽然面我的HR没怎么套路我，但是HR毕竟还是要尽量选择稳定的人，所以HR面还是要长心眼，对某些敏感问题的态度要坚决，宗旨：&lt;strong&gt;我爱XX公司，我一定去，工作地点不挑，实习时间能满足&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/117450353&#34;&gt;https://zhuanlan.zhihu.com/p/117450353&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>Top 20 Python Libraries for Data Science</title>
      <link>http://csyezheng.github.io/post/specialization/artificial-intelligence/machine-learning/top-20-python-libraries/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/artificial-intelligence/machine-learning/top-20-python-libraries/</guid>
      
        <description>&lt;h2 id=&#34;core-libraries--statistics&#34;&gt;Core Libraries &amp;amp; Statistics&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;NumPy&lt;/li&gt;
&lt;li&gt;SciPy&lt;/li&gt;
&lt;li&gt;Pandas&lt;/li&gt;
&lt;li&gt;StatsModels&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;visualization&#34;&gt;Visualization&lt;/h2&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Matplotlib&lt;/li&gt;
&lt;li&gt;Seaborn&lt;/li&gt;
&lt;li&gt;Plotly&lt;/li&gt;
&lt;li&gt;Bokeh&lt;/li&gt;
&lt;li&gt;Pydot&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h2&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Scikit-learn&lt;/li&gt;
&lt;li&gt;XGBoost&lt;/li&gt;
&lt;li&gt;Eli5&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;deep-learning&#34;&gt;Deep Learning&lt;/h2&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;TensorFlow&lt;/li&gt;
&lt;li&gt;PyTorch&lt;/li&gt;
&lt;li&gt;Keras&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;distributed-deep-learning&#34;&gt;Distributed Deep Learning&lt;/h2&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;Dist-keras / elephas / spark-deep-learning&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;natural-language-processing&#34;&gt;Natural Language Processing&lt;/h2&gt;
&lt;ol start=&#34;17&#34;&gt;
&lt;li&gt;NLTK&lt;/li&gt;
&lt;li&gt;SpaCy&lt;/li&gt;
&lt;li&gt;Gensim&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;data-scraping&#34;&gt;Data Scraping&lt;/h2&gt;
&lt;ol start=&#34;20&#34;&gt;
&lt;li&gt;Scrapy&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>Top Websites for Machine Learning</title>
      <link>http://csyezheng.github.io/post/specialization/artificial-intelligence/machine-learning/top-websites/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/artificial-intelligence/machine-learning/top-websites/</guid>
      
        <description>&lt;p&gt;&lt;a href=&#34;https://aihub.cloud.google.com/&#34;&gt;AI Hub&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Skincare</title>
      <link>http://csyezheng.github.io/post/other/health/skincare/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/other/health/skincare/</guid>
      
        <description>&lt;h1 id=&#34;skincare&#34;&gt;Skincare&lt;/h1&gt;
&lt;h2 id=&#34;cleanse-清洁&#34;&gt;Cleanse (清洁)&lt;/h2&gt;
&lt;h3 id=&#34;oil-cleanser&#34;&gt;oil cleanser&lt;/h3&gt;
&lt;h3 id=&#34;mild-cleanser&#34;&gt;mild cleanser&lt;/h3&gt;
&lt;p&gt;油性皮肤用用 38～40 度的热水比较好。比皮表温度稍高但又不觉得烫，容易把溢出的油脂洗掉。&lt;/p&gt;
&lt;p&gt;使用尽量柔软的毛巾，毛巾每周清洗、日晒，保持清洁。&lt;/p&gt;
&lt;p&gt;先把洗面奶挤在手上搓出泡沫，在往脸上扑，而不是直接在脸上搓泡沫，减少洗脸的时候对角质层的摩擦。&lt;/p&gt;
&lt;p&gt;洗完脸用毛巾擦脸的时候不要太使劲，减少摩擦。&lt;/p&gt;
&lt;p&gt;洗完脸，要及时擦干，使用爽肤水。&lt;/p&gt;
&lt;h4 id=&#34;cetaphil&#34;&gt;Cetaphil&lt;/h4&gt;
&lt;p&gt;Cetaphil cleanser has a high ph level which isn&amp;rsquo;t really ideal for a cleanser, so if you&amp;rsquo;re planning to buy one, then don&amp;rsquo;t. Look for a gentler one and do some research.&lt;/p&gt;
&lt;p&gt;Cleanser: Cetaphil&lt;/p&gt;
&lt;p&gt;Eye cream: CeraVe&lt;/p&gt;
&lt;p&gt;Moisturizer: CeraVe&lt;/p&gt;
&lt;p&gt;sunscreen: CeraVe&lt;/p&gt;
&lt;h2 id=&#34;toner-爽肤水&#34;&gt;Toner (爽肤水)&lt;/h2&gt;
&lt;p&gt;Simple Kind To Skin Soothing Facial Toner&lt;/p&gt;
&lt;h2 id=&#34;moisturizer-保湿霜&#34;&gt;Moisturizer (保湿霜)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cerave&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sunscreen-防晒霜&#34;&gt;Sunscreen (防晒霜)&lt;/h2&gt;
&lt;p&gt;每日查看UV index高于3，则抹防晒霜，UV index高于6就要尽量减少出门以及曝光时间了！&lt;/p&gt;
&lt;h4 id=&#34;碧柔&#34;&gt;碧柔&lt;/h4&gt;
&lt;p&gt;Biore Watery Essence，更适合涂脸。Biore water gel 更适合涂身体。&lt;/p&gt;
&lt;p&gt;抗氧化衰老长斑，不防晒黑，日常通勤足够用了。&lt;/p&gt;
&lt;h4 id=&#34;安耐晒&#34;&gt;安耐晒&lt;/h4&gt;
&lt;p&gt;防晒效果更好，长时间户外运动。&lt;/p&gt;
&lt;p&gt;If you’re planning a vacation by the sea or in the mountains, &lt;strong&gt;ANESSA&lt;/strong&gt; must be your first choise. If you just walk 20 minutes a day to work, &lt;strong&gt;Biore&lt;/strong&gt; will surprise you.&lt;/p&gt;
&lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt;
&lt;h3 id=&#34;sheet-masks-防毒面具&#34;&gt;Sheet masks (防毒面具)&lt;/h3&gt;
&lt;p&gt;If you plan to use sheet masks, cleanse and use the toner. Then apply the sheet mask for 15 minutes and then apply a small amount of moisturizer.&lt;/p&gt;
&lt;h3 id=&#34;exfoliant-去角质霜&#34;&gt;Exfoliant (去角质霜)&lt;/h3&gt;
&lt;p&gt;Mizon 8% AHA Peeling Serum (new)&lt;/p&gt;
&lt;p&gt;If you plan to use the exfoliant, cleanse first then exfoliate, then toner, then moisturizer.&lt;/p&gt;
&lt;h4 id=&#34;eye-cream&#34;&gt;Eye Cream&lt;/h4&gt;
&lt;p&gt;Mizon Snail Repair Eye Cream&lt;/p&gt;
&lt;h2 id=&#34;last-but-no-least&#34;&gt;Last but no least&lt;/h2&gt;
&lt;h3 id=&#34;change-pillow-cases&#34;&gt;change pillow cases&lt;/h3&gt;
&lt;p&gt;change your pillow cases every 2-3 days&lt;/p&gt;
&lt;h3 id=&#34;drink-water&#34;&gt;drink water&lt;/h3&gt;
&lt;p&gt;drink water. It&amp;rsquo;s good for your overall body not just the face.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://np.reddit.com/r/AsianBeauty/wiki/new_user_guide&#34;&gt;http://np.reddit.com/r/AsianBeauty/wiki/new_user_guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://np.reddit.com/r/AsianBeauty/wiki/theabroutine&#34;&gt;http://np.reddit.com/r/AsianBeauty/wiki/theabroutine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Bigger Leaner Stronger 5-DAY WORKOUT ROUTINE</title>
      <link>http://csyezheng.github.io/post/other/health/bls-5-day-workout-routine/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/other/health/bls-5-day-workout-routine/</guid>
      
        <description>&lt;h2 id=&#34;phase-1&#34;&gt;PHASE 1&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press(斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown(肱三头肌下拉)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift (杠铃硬拉)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;One-Arm Dumbbell Row (单臂哑铃划船)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip) (宽握高位下拉)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press Calf Raise* (腿举)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Seated Dumbbell Press (坐姿哑铃推举)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise* (哑铃侧平举)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Rear Lateral Raise (Seated)*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cable Crunch&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Close-Grip Bench Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Triceps Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Hammer Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Captain’s Chair Leg Raise&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-1&#34;&gt;DELOAD 1&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press (哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;phase-2&#34;&gt;PHASE 2&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push-1&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Dumbbell Bench Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lying Triceps Extension(“Skullcrusher”)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves-1&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Cable Row (Wide-Grip)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Close-Grip)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core-1&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Arnold Dumbbell Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Rear Delt Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Captain’s Chair Leg Raise&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs-1&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Romanian Deadlift&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Lunge (In-Place)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Standing Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core-1&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Dip*&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Hammer Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Plank&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-2&#34;&gt;DELOAD 2&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push-1&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press  (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull-1&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs-1&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;phase-3&#34;&gt;PHASE 3&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push-2&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves-2&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chin-Up&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Standing Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core-2&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Seated Dumbbell Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Rear Lateral Raise(Bent-Over)*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Plank&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs-2&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Lunge (Reverse)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core-2&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Close-Grip Bench Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E-Z Bar Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Triceps Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Hammer Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weighted Sit-Up&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-3&#34;&gt;DELOAD 3&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push-2&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull-2&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs-2&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;phase-4&#34;&gt;PHASE 4&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push-3&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Dumbbell Bench Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lying Triceps Extension(“Skullcrusher”)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves-3&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;One-Arm Dumbbell Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core-3&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Arnold Dumbbell Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Rear Delt Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weighted Sit-Up&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs-3&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Romanian Deadlift&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Single-Leg Split Squat&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core-3&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Dip*&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alternating Dumbbell Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E-Z Bar Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hanging Leg Raise&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-4&#34;&gt;DELOAD 4&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push-3&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull-3&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs-3&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;phase-5&#34;&gt;PHASE 5&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push-4&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves-4&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Cable Row (Close-Grip)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Close-Grip)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core-4&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Seated Dumbbell Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Rear Delt Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lying Leg Raise&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs-4&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Single-Leg Split Squat&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Standing Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core-4&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Close-Grip Bench Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seated Triceps Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alternating Dumbbell Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Abdominal Rollout&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-5&#34;&gt;DELOAD 5&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push-4&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press(哑铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull-4&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs-4&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;phase-6&#34;&gt;PHASE 6&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--push-5&#34;&gt;WORKOUT 1 | PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Dumbbell Bench Press&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lying Triceps Extension(“Skullcrusher”)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--pull-and-calves-5&#34;&gt;WORKOUT 2 | PULL AND CALVES&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pull-Up&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Standing Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--upper-body-and-core-5&#34;&gt;WORKOUT 3 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Arnold Dumbbell Press&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Rear Delt Row&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Side Lateral Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Abdominal Rollout&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-4--legs-5&#34;&gt;WORKOUT 4 | LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Romanian Deadlift&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Lunge (Walking)&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press Calf Raise*&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-5--upper-body-and-core-5&#34;&gt;WORKOUT 5 | UPPER BODY AND CORE&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Dip*&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Hammer Curl&lt;/td&gt;
&lt;td&gt;Warm-up and 3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Triceps Pushdown&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Curl&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weighted Sit-Up&lt;/td&gt;
&lt;td&gt;3 hard sets&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;deload-6&#34;&gt;DELOAD 6&lt;/h2&gt;
&lt;h4 id=&#34;workout-1--deload-push-5&#34;&gt;WORKOUT 1 | DELOAD PUSH&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Bench Press (杠铃卧推)&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Incline Barbell Bench Press (斜杠铃卧推)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dumbbell Bench Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-2--deload-pull-5&#34;&gt;WORKOUT 2 | DELOAD PULL&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Deadlift&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Row&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lat Pulldown (Wide-Grip)&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;workout-3--deload-legs-5&#34;&gt;WORKOUT 3 | DELOAD LEGS&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Barbell Squat&lt;/td&gt;
&lt;td&gt;Warm-up and 2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Press&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leg Curl (Lying or Seated)*&lt;/td&gt;
&lt;td&gt;2 sets of 3 reps with last hard-set weight&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
      
    </item>
    
    <item>
      <title>workout</title>
      <link>http://csyezheng.github.io/post/other/health/workout/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/other/health/workout/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Barbell Bench Press (杠铃卧推)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://5b0988e595225.cdn.sohucs.com/images/20180322/aa0a1bde910643dabb999b9a3dcee6a6.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incline Barbell Bench Press(斜杠铃卧推)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://09imgmini.eastday.com/mobile/20191023/2019102312_1b11b8e01a3a4134b76f43e0b2bb2279_0427.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dumbbell Bench Press(哑铃卧推)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/v2-664ad0c87755d121160782d81a1547cf_b.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Triceps Pushdown(肱三头肌下拉)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://img.mp.itc.cn/upload/20170730/9e93b96db66d4a83bd8a93221c78f532_th.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Barbell Deadlift (杠铃硬拉)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://img.mp.itc.cn/upload/20160906/6bab46ef41164e0cb902000d48bd676b.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One-Arm Dumbbell Row (单臂哑铃划船)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic.rmb.bdstatic.com/9933e9835d7a8290fc3d3a92411078a53820.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hiphotos.baidu.com/feed/pic/item/d4628535e5dde7112553be13abefce1b9c166156.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lat Pulldown (Wide-Grip) (宽握高位下拉)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hiphotos.baidu.com/feed/pic/item/6a600c338744ebf86d8499dad5f9d72a6159a75a.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leg Press Calf Raise* (腿举)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://02.imgmini.eastday.com/mobile/20171106/20171106105141_25e75f88fa6a404730953d1b0ab48e87_16.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seated Dumbbell Press (坐姿哑铃推举)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://5b0988e595225.cdn.sohucs.com/images/20180717/5a37e7d636c744449f0fe8791b94b475.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dumbbell Side Lateral Raise*&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://5b0988e595225.cdn.sohucs.com/images/20180717/73993cb12ac544abbc06207695cbbfff.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Search Architecture</title>
      <link>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/search-architecture/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/computer-and-network-security/web-application/back-end/search-architecture/</guid>
      
        <description>&lt;h2 id=&#34;搜索服务使用说明&#34;&gt;搜索服务使用说明&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&lt;script src=&#34;http://csyezheng.github.io/js/raphael.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://csyezheng.github.io/js/flowchart.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;diagram-draw&#34; align=&#34;center&#34;&gt;&lt;/div&gt;
&lt;script id=&#34;code&#34;&gt;
	&#34;\nst=\u003estart: 开始\ne=\u003eend: 结束\n\nop1=\u003eoperation: 服务订阅\ncond1=\u003econdition: 是否已创建应用\nop2=\u003eoperation: 订阅成功\nop3=\u003eoperation: 服务管理\nop4=\u003eoperation: 服务创建\npara1=\u003eparallel: 选择服务类型\nst(right)-\u003eop1-\u003econd1\ncond1(yes)-\u003eop2-\u003eop3-\u003eop4-\u003epara1\ncond1(no)-\u003eop1\n\nop5=\u003eoperation: 垂直搜索\nop6=\u003eoperation: 统一搜索\nop7=\u003eoperation: 空白模板\npara2=\u003eparallel: 数据接入\nop201=\u003eoperation: 勾选垂直搜索\nop202=\u003eoperation: 流程配置\ncond201=\u003econdition: 用户是否分流\npara1(path1, bottom)-\u003eop5-\u003eop7-\u003epara2\npara1(path2, right)-\u003eop6-\u003eop201-\u003eop202-\u003econd201\n\nop8=\u003eoperation: 流计算-\u003eMySQL: \npara3=\u003eparallel: 搜索配置\npara2(path1, left)-\u003eop8\npara2(path2, bottom)-\u003epara3\n\nop11=\u003eoperation: Query参数\nop12=\u003eoperation: Query理解\nop13=\u003eoperation: Query理解\npara4=\u003eparallel: 智能交互\npara3(path1, left)-\u003eop11(bottom)-\u003eop12(bottom)-\u003eop13\npara3(path2, bottom)-\u003epara4\n\nop14=\u003eoperation: 联想字段\nop15=\u003eoperation: 测试\nop16=\u003eoperation: 发布\nop17=\u003eoperation: 生成服务ID\npara4(path1, right)-\u003eop14\npara4(path2, bottom)-\u003eop15-\u003eop16-\u003eop17\n\ncond202=\u003econdition: 是否识别意图\nop203=\u003eoperation: 内容节点\nop204=\u003eoperation: 测试\nop205=\u003eoperation: 发布\ncond201(yes)-\u003econd202\ncond201(no)-\u003eop203\ncond202(yes)-\u003eop203\ncond202(no)-\u003eop203\nop203-\u003eop204-\u003eop205-\u003eop17\n&#34;
	var source = document.getElementById( &#34;code&#34; ).innerText;
	source = source.replace(/\\n/g, &#39;\n&#39;);
	source = source.replace(/\\u003e/g, &#39;&gt;&#39;);
	source = source.replace(/\\&#34;/g, &#39;&#34;&#39;);
	var diagram = flowchart.parse( source );
	diagram.drawSVG( &#39;diagram-draw&#39; );
&lt;/script&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;
&lt;script src=&#34;http://csyezheng.github.io/js/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://csyezheng.github.io/js/mindmap.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://csyezheng.github.io/js/kity.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://csyezheng.github.io/js/kityminder.core.min.js&#34;&gt;&lt;/script&gt;


&lt;link rel=&#34;stylesheet&#34; href=&#34;http://csyezheng.github.io/css/mindmap.css&#34; /&gt;


&lt;div id=&#34;&#34; class=&#34;mindmap mindmap-lg&#34;&gt;
    &lt;ul&gt;
&lt;li&gt;搜索运营
&lt;ul&gt;
&lt;li&gt;运营分析
&lt;ul&gt;
&lt;li&gt;Dashboard
&lt;ul&gt;
&lt;li&gt;TopN&lt;/li&gt;
&lt;li&gt;dashboard&lt;/li&gt;
&lt;li&gt;badcase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;热搜词统计&lt;/li&gt;
&lt;li&gt;用户行为明细&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;词库管理
&lt;ul&gt;
&lt;li&gt;同义词
&lt;ul&gt;
&lt;li&gt;手动新增&lt;/li&gt;
&lt;li&gt;自动挖掘&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;专有名词&lt;/li&gt;
&lt;li&gt;听用词&lt;/li&gt;
&lt;li&gt;核心词&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;业务管理
&lt;ul&gt;
&lt;li&gt;直通车&lt;/li&gt;
&lt;li&gt;黑名单&lt;/li&gt;
&lt;li&gt;提示次&lt;/li&gt;
&lt;li&gt;敏感词&lt;/li&gt;
&lt;li&gt;纠错词&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;query-understanding-framework-architecture&#34;&gt;Query Understanding Framework Architecture&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.mdpi.com/applsci/applsci-10-01127/article_deploy/html/images/applsci-10-01127-g003-550.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;spatial-and-temporal-parsing&#34;&gt;Spatial and Temporal Parsing&lt;/h4&gt;
&lt;h4 id=&#34;concept-recognition&#34;&gt;Concept Recognition&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.mdpi.com/applsci/applsci-10-01127/article_deploy/html/images/applsci-10-01127-g004-550.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;named-entity-recognition&#34;&gt;Named Entity Recognition&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.mdpi.com/applsci/applsci-10-01127/article_deploy/html/images/applsci-10-01127-g005-550.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;query-expansion&#34;&gt;Query Expansion&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.mdpi.com/applsci/applsci-10-01127/article_deploy/html/images/applsci-10-01127-g006-550.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;system-design&#34;&gt;System Design&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.mdpi.com/applsci/applsci-10-01127/article_deploy/html/images/applsci-10-01127-g007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Bigger Leaner Stronger</title>
      <link>http://csyezheng.github.io/post/other/health/bigger-leaner-stronger/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/other/health/bigger-leaner-stronger/</guid>
      
        <description>&lt;h3 id=&#34;workouts&#34;&gt;Workouts&lt;/h3&gt;
&lt;h3 id=&#34;meal-plans&#34;&gt;Meal Plans&lt;/h3&gt;
&lt;h2 id=&#34;part-1-whats-in-this-for-you&#34;&gt;Part 1: What’s in This for You?&lt;/h2&gt;
&lt;h4 id=&#34;1-the-promise&#34;&gt;1. The Promise&lt;/h4&gt;
&lt;p&gt;You absolutely, positively can have the lean, muscular, and powerful body that you dream about.&lt;/p&gt;
&lt;h4 id=&#34;2-who-is-mike-matthews-and-why-should-i-care&#34;&gt;2. Who Is Mike Matthews and Why Should I Care?&lt;/h4&gt;
&lt;h4 id=&#34;3-why-bigger-leaner-stronger-is-different&#34;&gt;3. Why Bigger Leaner Stronger Is Different&lt;/h4&gt;
&lt;h2 id=&#34;part-2-key-things-they-arent-telling-you&#34;&gt;Part 2: Key Things “They” Aren’t Telling You&lt;/h2&gt;
&lt;h4 id=&#34;4-the-hidden-barrier&#34;&gt;4. The Hidden Barrier&lt;/h4&gt;
&lt;h4 id=&#34;5-what-most-men-will-never-know-about-getting-fit--part-1&#34;&gt;5. What Most Men Will Never Know about Getting Fit – Part 1&lt;/h4&gt;
&lt;h4 id=&#34;6-what-most-men-will-never-know-about-getting-fit--part-2&#34;&gt;6. What Most Men Will Never Know about Getting Fit – Part 2&lt;/h4&gt;
&lt;h4 id=&#34;7-the-10-absolute-worst-fat-loss-myths-and-mistakes&#34;&gt;7. The 10 Absolute Worst Fat Loss Myths and Mistakes&lt;/h4&gt;
&lt;h4 id=&#34;8-the-10-absolute-worst-muscle-building-myths-and-mistakes&#34;&gt;8. The 10 Absolute Worst Muscle-Building Myths and Mistakes&lt;/h4&gt;
&lt;h4 id=&#34;9-the-3-little-big-things-about-rapid-fat-loss&#34;&gt;9. The 3 Little Big Things about Rapid Fat Loss&lt;/h4&gt;
&lt;h4 id=&#34;10-the-3-little-big-things-about-building-lean-muscle&#34;&gt;10. The 3 Little Big Things about Building Lean Muscle&lt;/h4&gt;
&lt;h2 id=&#34;part-3-how-to-win-the-inner-game-of-getting-fit&#34;&gt;Part 3: How to Win the “Inner Game” of Getting Fit&lt;/h2&gt;
&lt;h4 id=&#34;11-the-great-inner-game-secret&#34;&gt;11. The Great “Inner Game” Secret&lt;/h4&gt;
&lt;h4 id=&#34;12-the-anatomy-of-willpower&#34;&gt;12. The Anatomy of Willpower&lt;/h4&gt;
&lt;h4 id=&#34;13-13-easy-ways-to-boost-your-willpower-and-self-control&#34;&gt;13. 13 Easy Ways to Boost Your Willpower and Self-Control&lt;/h4&gt;
&lt;h4 id=&#34;14-use-it-or-lose-it-how-to-train-your-willpower&#34;&gt;14. Use It or Lose It: How to Train Your Willpower&lt;/h4&gt;
&lt;h4 id=&#34;15-finding-your-biggest-fitness-whys&#34;&gt;15. Finding Your Biggest Fitness Whys&lt;/h4&gt;
&lt;h2 id=&#34;part-4-the-last-diet-advice-youll-ever-need&#34;&gt;Part 4: The Last Diet Advice You’ll Ever Need&lt;/h2&gt;
&lt;h4 id=&#34;16-welcome-to-the-wonderful-world-of-flexible-dieting&#34;&gt;16. Welcome to the Wonderful World of Flexible Dieting&lt;/h4&gt;
&lt;h4 id=&#34;17-the-easiest-way-to-calculate-your-calories-and-macros&#34;&gt;17. The Easiest Way to Calculate Your Calories and Macros&lt;/h4&gt;
&lt;h4 id=&#34;18-the-truth-about-preworkout-and-postworkout-nutrition&#34;&gt;18. The Truth about Preworkout and Postworkout Nutrition&lt;/h4&gt;
&lt;h4 id=&#34;19-how-to-make-meal-plans-that-really-work&#34;&gt;19. How to Make Meal Plans That Really Work&lt;/h4&gt;
&lt;h4 id=&#34;20-how-to-cheat-on-your-diet-without-ruining-it&#34;&gt;20. How to “Cheat” on Your Diet Without Ruining It&lt;/h4&gt;
&lt;h2 id=&#34;part-5-the-last-exercise-advice-youll-ever-need&#34;&gt;Part 5: The Last Exercise Advice You’ll Ever Need&lt;/h2&gt;
&lt;h4 id=&#34;21-the-ultimate-workout-plan-for-men--strength-training&#34;&gt;21. The Ultimate Workout Plan for Men – Strength Training&lt;/h4&gt;
&lt;h4 id=&#34;22-the-ultimate-workout-plan-for-men--cardio&#34;&gt;22. The Ultimate Workout Plan for Men – Cardio&lt;/h4&gt;
&lt;h4 id=&#34;23-the-best-exercises-for-building-your-best-body-ever&#34;&gt;23. The Best Exercises for Building Your Best Body Ever&lt;/h4&gt;
&lt;h4 id=&#34;24-the-definitive-guide-to-the-big-three&#34;&gt;24. The Definitive Guide to the “Big Three”&lt;/h4&gt;
&lt;h2 id=&#34;part-6-dont-buy-another-supplement-until-you-read-this&#34;&gt;Part 6: Don’t Buy Another Supplement Until You Read This&lt;/h2&gt;
&lt;h4 id=&#34;25-the-great-supplement-hoax&#34;&gt;25. The Great Supplement Hoax&lt;/h4&gt;
&lt;h4 id=&#34;26-the-smart-supplement-buyers-guide&#34;&gt;26. The Smart Supplement Buyer’s Guide&lt;/h4&gt;
&lt;h2 id=&#34;part-7-the-bigger-leaner-stronger-program&#34;&gt;Part 7: The Bigger Leaner Stronger Program&lt;/h2&gt;
&lt;h4 id=&#34;27-you-paint-by-the-numbers-your-body-does-the-rest&#34;&gt;27. You Paint by the Numbers, Your Body Does the Rest&lt;/h4&gt;
&lt;h4 id=&#34;28-the-bigger-leaner-stronger-diet-plan&#34;&gt;28. The Bigger Leaner Stronger Diet Plan&lt;/h4&gt;
&lt;h4 id=&#34;29-the-bigger-leaner-stronger-training-plan&#34;&gt;29. The Bigger Leaner Stronger Training Plan&lt;/h4&gt;
&lt;h4 id=&#34;30-the-bigger-leaner-stronger-supplementation-plan&#34;&gt;30. The Bigger Leaner Stronger Supplementation Plan&lt;/h4&gt;
&lt;h4 id=&#34;31-the-right-and-wrong-ways-to-track-your-progress&#34;&gt;31. The Right and Wrong Ways to Track Your Progress&lt;/h4&gt;
&lt;h4 id=&#34;32-how-to-break-through-weight-loss-plateaus&#34;&gt;32. How to Break Through Weight Loss Plateaus&lt;/h4&gt;
&lt;h4 id=&#34;33-how-to-break-through-weight-gain-plateaus&#34;&gt;33. How to Break Through Weight Gain Plateaus&lt;/h4&gt;
&lt;h2 id=&#34;part-8-the-beginning&#34;&gt;Part 8: The Beginning&lt;/h2&gt;
&lt;h4 id=&#34;34-the-bigger-leaner-stronger-quickstart-guide&#34;&gt;34. The Bigger Leaner Stronger Quickstart Guide&lt;/h4&gt;
&lt;h4 id=&#34;35-from-here-your-body-will-change&#34;&gt;35. From Here, Your Body Will Change&lt;/h4&gt;
&lt;h4 id=&#34;36-frequently-asked-questions&#34;&gt;36. Frequently Asked Questions&lt;/h4&gt;
&lt;h4 id=&#34;37-would-you-do-me-a-favor&#34;&gt;37. Would You Do Me a Favor?&lt;/h4&gt;
</description>
      
    </item>
    
    <item>
      <title>Bert</title>
      <link>http://csyezheng.github.io/post/specialization/artificial-intelligence/deep-learning/bert/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/artificial-intelligence/deep-learning/bert/</guid>
      
        <description>&lt;h1 id=&#34;bert-可解释性-从头说起&#34;&gt;BERT 可解释性-从&amp;quot;头&amp;quot;说起&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;一、背景介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;搜索场景下用户搜索的 query 和召回文章标题(title)的相关性对提升用户的搜索体验有很大帮助。query-title 分档任务要求针对 query 和 title 按文本相关性进行 5 个档位的分类(1~5 档)，各档位从需求满足及语义匹配这两方面对 query-doc 的相关度进行衡量，档位越大表示相关性越高，如 1 档表示文本和语义完全不相关，而 5 档表示文本和语义高度相关，完全符合 query 的需求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-58cac5479dcc451b4d30133b67fb8c5d_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们尝试将 Bert 模型应用在 query-title 分档任务上，将 query 和 title 作为句对输入到 bert 中，取最后一层 cls 向量用做 5 分类(如上图)，最后得到的结果比 LSTM-Attention 交互式匹配模型要好。虽然知道了 bert&lt;strong&gt;能&lt;/strong&gt;解决这个问题，我们更好奇的是&amp;quot;&lt;strong&gt;为什么&lt;/strong&gt;&amp;quot;：为什么 bert 的表现能这么好？这里面有没有可解释的部分呢？&lt;/p&gt;
&lt;p&gt;因为 Multi-head-attention 是 bert 的主要组成部分，所以我们从&amp;quot;头&amp;quot;入手，希望弄清楚各个 head 对 bert 模型有什么作用。为了研究某个 head 对模型的影响，我们需要比较有这个 head 和没有这个 head 模型的前后表现。这里定义一下 HEAD-MASK 操作，其实就是针对某个 head，直接将这个 head 的 attention 值置成 0，这样对于任何输入这个 head 都只能输出 0 向量。&lt;/p&gt;
&lt;p&gt;通过 HEAD-MASK 操作对各个 head 进行对比实验，发现了下面几个有趣的点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;attention-head 很冗余/鲁棒，去掉 20%的 head 模型不受影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各层 transformer 之间不是串行关系，去掉一整层 attention-head 对下层影响不大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各个 head 有固定的功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;某些 head 负责分词&lt;/li&gt;
&lt;li&gt;某些 head 提取语序关系&lt;/li&gt;
&lt;li&gt;某些 head 负责提取 query-title 之间 term 匹配关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面我们开始实验正文，看看这些结论是怎么得到的&lt;/p&gt;
&lt;h3 id=&#34;二bert-模型-attention-head-实验&#34;&gt;&lt;strong&gt;二、Bert 模型 Attention-Head 实验&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;attention-head 是 bert 的基本组成模块，本次实验想要研究各个 head 都对模型作出了什么贡献。通过 Mask 掉某个 head，对比模型前后表现的差异来研究这个 head 对模型有什么样的作用(对训练好的 bert 做 head-mask，不重新训练，对比测试集的表现)。&lt;/p&gt;
&lt;p&gt;bert-base 模型共 12 层每层有 12 个 head，下面实验各个 head 提取的特征是否有明显的模式(Bert 模型为在 query-title 数据上 finetune 好的中文&lt;strong&gt;字&lt;/strong&gt;模型)&lt;/p&gt;
&lt;h3 id=&#34;21-attention-head-比较冗余&#34;&gt;&lt;strong&gt;2.1 Attention-Head 比较冗余&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;标准大小的 bert 一共有 12*12 共 144 个 head.我们尝试对训练好的 bert 模型，随机 mask 掉一定比例的 head,再在测试数据集上测试分档的准确率(&lt;strong&gt;五分类&lt;/strong&gt;)。&lt;/p&gt;
&lt;p&gt;下图的柱状图的数值表示相比于 bseline(也就是不做任何 head-mask)模型 acc 的相对提升,如+1%表示比 baseline 模型的 acc 相对提高了 1%，从下面的图可以看到，随机 mask 掉低于 20%的 head，在测试数据集上模型的 acc 不会降低，甚至当 mask 掉 10%的 head 的时候模型表现比不做 head mask 的时候还提升了 1%。当 mask 掉超过一定数量的 head 后，模型表现持续下降，mask 掉越多表现越差。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-5725214f86d8232f6060e7177d0e92ca_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时为了弄清楚底层和高层的 transformer 哪个对于 query-title 分类更加的重要，分别对底层(layer0 ~ layer5 )和高层(layer6~layer11)的 head 做 mask, 去掉的 head 比例控制在 0~50%(占总 head 数量)之间，50%表示去掉了底层或者是高层 100%的 head 下面的图很清晰的说明了底层和高层的 attention-head 关系，橙色部分表示只 mask 掉高层(6 - 11 层)的 head,蓝色部分表示只 mask 掉底层(0 - 5 层)的 head。&lt;/p&gt;
&lt;p&gt;显然高层的 attention-head 非常的依赖底层的 head，底层的 attention-head 负责提取输入文本的各种特征，而高层的 attention 负责将这些特征结合起来。具体表现在当 mask 掉底层(0~5 层)的 80%的 head(图中横坐标为 40%)和 mask 掉底层的 100%的 head(图中横坐标为 50%)时，模型在测试数据集上表现下降剧烈(图中蓝色部分)，说明了去掉大部分的底层 head 后只依赖高层的 head 是不行的，高层的 head 并没有提取输入的特征。相反去掉大部分高层的 head 后模型下降的并没有那么剧烈(图中橙色部分)，说明了底层的 head 提取到了很多对于本任务有用的输入特征，这部分特征通过残差连接可以直接传导到最后一层用做分类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-39143ffec66598679568a993dac38b69_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个结论后面也可以用于指导模型蒸馏，实验结果表明底层的 transformer 比高层的 transformer 更加的重要，显然我们在蒸馏模型时需要保留更多的底层的 head&lt;/p&gt;
&lt;p&gt;那么对于模型来说是否有某些层的 head 特别能影响 query-title 分类呢？假设将 bert 中所有的 attention-head 看做一个 12*12 的方阵，下面是按行 mask 掉一整行 head 后模型在测试数据上的表现，柱状图上的数值表示相比 baseline 模型的相对提升。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/80/v2-e19db86266c333175066bf06d28c21bb_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 mask 掉第 5 层～第 9 层的 head 都模型都有比较大的正面提升，特别是当去掉整个第 8 层的 attention-head 的时候测试数据准确率相对提升了 2.3%，从上图可以得到两个结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bert 模型非常的健壮或者是冗余度很高&lt;/li&gt;
&lt;li&gt;Bert 模型各层之间不是串行依赖的关系，信息并不是通过一层一层 transformer 层来传递的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bert 模型非常的健壮或者是冗余度很高，直接去掉一整层的 attention-head 并不会对模型的最终表现有太大的影响。 直接去掉整层的 attention-head 模型表现并没有大幅度的下降，说明各层提取的特征信息并不是一层一层的串行传递到分类器的，而是通过残差连接直接传导到对应的层。&lt;/p&gt;
&lt;h3 id=&#34;22-某些-head-负责判断词的边界使得字模型带有分词信息&#34;&gt;&lt;strong&gt;2.2 某些 head 负责判断词的边界(使得字模型带有分词信息)&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在我们的 query-title 分档场景中，发现词粒度的 bert 和字粒度的 bert 最终的表现是差不多的，而对于 rnn 模型来说字粒度的 rnn 很难达到词粒度 rnn 的效果，我们希望研究一下为什么词粒度和字粒度的 bert 表现差不多。&lt;/p&gt;
&lt;p&gt;使用的 bert 可视化工具**&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//github.com/jessevig/bertviz&#34;&gt;bert_viz&lt;/a&gt;**&lt;img src=&#34;https://www.zhihu.com/equation?tex=%5E%7B%5B2%5D%7D&#34; alt=&#34;[公式]&#34;&gt;观察各层 attention-head 的 attention 权重分布，可以发现某些 head 带有很明显的分词信息。推测这部分 attention-head 是专门用于提取分词信息的 head。当当前的字可能是词的结尾时，att 权重会偏向 sep,当这个字为词的结尾可能性越大(常见的词结尾)，sep 的权重会越高。当当前字不是词结尾时，att 会指向下一个字。**这种模式非常明显，直接拿这个 attention-head 的结果用于分词准确率为 70%。**&lt;/p&gt;
&lt;p&gt;下面 gif 为我们模型中第 1 层第 3 个 head 的 attention 分布权重图，可以发现 attention 权重很明显带有词的边界信息，当当前的字是结尾时 attention 权重最大的 token 为&amp;quot;SEP&amp;quot;，若当前字不是结尾时 attention 权重最大的为下一个字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/v2-47dbfcf64677c3dfd7152735e64a58e9_b.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;这种用于提取分词信息的 head 有很多，且不同的 head 有不同的分词粒度，如果将多个粒度的分词综合考虑(有一个 head 分词正确就行)，则直接用 attention-head 切词的准确率在 96%，这也是为什么词粒度 bert 和字粒度 bert 表现差不多的原因。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-bde0a5f3b6c50b5716e074306bca1cbd_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;猜测字粒度 bert 带词边界信息是通过 bert 的预训练任务 MLM 带来的，语言模型的训练使得 bert 对各个字之间的组合非常的敏感，从而能够区分词的边界信息。&lt;/p&gt;
&lt;h3 id=&#34;23-某些-head-负责编码输入的顺序&#34;&gt;&lt;strong&gt;2.3 某些 head 负责编码输入的顺序&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;我们知道 bert 的输入为 token_emb+pos_emb+seg_type_emb 这三个部分相加而成，而文本输入的顺序完全是用 pos_emb 来隐式的表达。bert 中某些 head 实际上负责提取输入中的位置信息。这种 attention-head 有明显的上下对齐的模式，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic1.zhimg.com/80/v2-11ce4ed825f4130f0d16f3e6562c8430_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;原输入: query=&amp;ldquo;京东小哥&amp;rdquo;, title=&amp;ldquo;京东小哥最近在干嘛&amp;rdquo;,bert 模型判定为 4 档&lt;/p&gt;
&lt;p&gt;将 title 顺序打乱: query=&amp;ldquo;京东小哥&amp;rdquo;, title=&amp;ldquo;近东嘛最都在干哥小京&amp;rdquo;,bert 模型判定为&lt;strong&gt;2 档&lt;/strong&gt; 将 title 顺序打乱: query=&amp;ldquo;京东小哥&amp;rdquo;, title=&amp;ldquo;近东嘛最都在干哥小京&amp;rdquo;,mask 掉 7 个怀疑用于提取语序的 head,bert 模型判定为&lt;strong&gt;3 档&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面的图分别对比了不做 mask，随机 mask 掉 7 个 head(重复 100 次取平均值)，mask 掉 7 个特定的 head(怀疑带有语序信息的 head) 从下面的图看到，mask 掉 7 个特定的 head 后整体分档提升为 3 档，而随机 mask 掉 7 个 head 结果仍然为 2 档，且档位概率分布和不 mask 的情况差别不大。&lt;/p&gt;
&lt;p&gt;这个 case 说明了我们 mask 掉的 7 个特定的 head 应该是负责提取输入的顺序信息，也就是语序信息。将这部分 head mask 掉后，bert 表现比较难察觉到 title 中的乱序，从而提升了分档。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic1.zhimg.com/80/v2-baf0efbdabfcf5459e942e5a5d609f8c_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;24-某些-head-负责-query-和-title-中相同部分的-term-匹配&#34;&gt;&lt;strong&gt;2.4 某些 head 负责 query 和 title 中相同部分的 term 匹配&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;query 和 title 中是否有相同的 term 是我们的分类任务中非常关键的特征，假如 query 中大部分 term 都能在 title 中找到，则 query 和 title 相关性一般比较高。如 query=&amp;ldquo;京东小哥&amp;quot;就能完全在 title=&amp;ldquo;京东小哥最近在干嘛&amp;quot;中找到，两者的文本相关性也很高。我们发现部分 attention-head 负责提取这种 term 匹配特征，这种 head 的 attention 权重分布一般如下图，可以看到上句和下句中相同 term 的权重很高(颜色越深表示权重越大)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/80/v2-c2fa3ba68b6cc0c7ccdbfe1d4c182dbb_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中在第 2~第 4 层有 5 个 head 匹配的模式特别明显。我们发现虽然 bert 模型中 attention-head 很冗余，去掉一些 head 对模型不会有太大的影响，但是有少部分 head 对模型非常重要，下面展示这 5 个 head 对模型的影响，表格中的数值表示与 baseline 模型的 acc 相对提升值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic1.zhimg.com/80/v2-e3302aae2032e8ff09b807f1f8e2a97c_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用测试数据作为标准，分别测试随机 mask 掉 5 个 head 和 mask 掉 5 个指定的 head(这些 head 在 attention 可视化上都有明显的 query-title 匹配的模式)。从结果可以看到去掉这些负责 query-title 匹配的 head 后模型表现剧烈下降，只去掉这 5 个 head 就能让模型表现下降 50%。甚至 mask 掉 0~5 层其他 head，只保留这 5 个 head 时模型仍维持 baseline 模型 82%的表现，说明了 query-title 的 term 匹配在我们的任务中是非常重要的。&lt;/p&gt;
&lt;p&gt;这也许是为什么双塔 bert 在我们的场景下表现会那么差的原因(Bert+LSTM 实验中两个模型结合最后的表现差于只使用 Bert, Bert 的输入为双塔输入)，因为 query 和 title 分别输入，使得这些 head 没有办法提取 term 的匹配特征(相当于 mask 掉了这些 head)，而这些匹配特征对于我们的分类任务是至关重要的&lt;/p&gt;
&lt;h3 id=&#34;241-finetune-对于负责-term-匹配-attention-head-的影响&#34;&gt;&lt;strong&gt;2.4.1 finetune 对于负责 term 匹配 attention-head 的影响&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在 query-title 分档任务中 query 和 title 中是否有相同的 term 是很重要的特征，那么在 finetune 过程中负责 query-title 中相同 term 匹配的 head 是否有比较明显的增强呢？&lt;/p&gt;
&lt;p&gt;下面以 case 为例说明： query=&amp;ldquo;我在伊朗长大&amp;rdquo; title=&amp;ldquo;假期电影《我在伊朗长大》&amp;rdquo;&lt;/p&gt;
&lt;p&gt;下图展示了 query-title 数据&lt;em&gt;&lt;strong&gt;finetune 前&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;某个&lt;/strong&gt;负责 term 匹配的 head 的 attention 分配图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/80/v2-1fe9e219c26f2708b7f9e7cb1b251d2b_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;没有 finetune 前&lt;/strong&gt;，可以看到某些 head 也会对上下句中重复的 term 分配比较大的 attention 值，这个特质可能是来自预训练任务 NSP(上下句预测)。因为假如上句和下句有出现相同的 term，则它们是上下句的概率比较大，所以 bert 有一些 head 专门负责提取这种匹配的信息。&lt;/p&gt;
&lt;p&gt;除了上下句相同的 term 有比较大的注意力，每个 term 对自身也有比较大的注意力权重（体现在图中对角线上的值都比较大) 为了更直观的看&lt;strong&gt;训练前后&lt;/strong&gt;哪部分的 attention 值有比较大的改变，分别展示训练后 attention&lt;strong&gt;增强&lt;/strong&gt;(微调前-微调后&amp;gt;0)和训练后 attention&lt;strong&gt;减弱&lt;/strong&gt;(微调前-微调后&amp;lt;0)的 attention 分配图。可以观察到比较明显的几个点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;query 和 title 中 term 匹配的 attention 值变大了 从下图可以看到, query 和 title 中具有相同 term 时 attention 相比于训练前是有比较大的增强。说明在下游任务(query-title 分档)训练中增强了这个 head 的相同 term 匹配信息的抽取能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/80/v2-edb5789f6481831d6f60495980be5d97_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;term 和自身的 attention 变小了 模型将重点放在找 query 和 title 中是否有相同的 term，弱化了 term 对自身的注意力权重&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-3bd82ee8721a541b2b992490bc0d8b86_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分隔符 sep 的 attention 值变小了。 有**&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1906.04341.pdf&#34;&gt;论文&lt;/a&gt;**指出当某个 token 的 attention 指向 sep 时表示一种不分配的状态(即此时没有找到合适的 attention 分配方式)，在经过 finetune 后 term 指向 sep 的权重变小了，表示经过 query-title 数据训练后这个 head 的 attention 分配更加的明确了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;242-是否有某个-head-特别能影响模型&#34;&gt;&lt;strong&gt;2.4.2 是否有某个 head 特别能影响模型&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;从上面的实验可以看到，bert 模型有比较多冗余的 head。去掉一部分这些 head 并不太影响模型，但是有少部分 head 特别能影响模型如上面提到的负责提取上下句中 term 匹配信息的 head，只去掉 5 个这种 head 就能让模型的表现下降 50%。那么是否有某个 head 特别能影响结果呢？&lt;/p&gt;
&lt;p&gt;下面实验每次只 mask 掉一个 head，看模型在测试数据中表现是否上升/下降。下图中将 bert 的 144 个 head 看作 12X12 的矩阵，矩阵内每个元素表示去掉这个 head 后模型在测试数据上的表现。其中 0 表示去掉后对模型的影响不太大。元素内的值表示相对于 baseline 的表现提升，如+1%表示相比 baseline 的 acc 提高了 1%。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-df23645337d194720fdc725f3ef16661_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到对于 bert 的大部分 head，单独去掉这个 head 对模型并不会造成太大的影响，而有少部分 head 确实特别能影响模型，比如负责上下句(query-title)中相同 term 匹配的 head。即使去掉一个这种 head 也会使得模型的表现下降。同时注意到高层(第 10 层)有一个 head 去掉后模型表现变化也很大，实验发现这个 head 功能是负责抽取底层 head 输出的特征，也就是 3-4 层中 head 抽取到输入的 query-title 有哪些相同 term 特征后，这部分信息会传递到第 10 层进一步进行提取，最后影响分类。&lt;/p&gt;
&lt;h3 id=&#34;243-高层-head-是如何提取底层-head-特征-一个典型-case&#34;&gt;&lt;strong&gt;2.4.3 高层 head 是如何提取底层 head 特征-一个典型 case&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;上图中，在第 10 层有一个 head 去掉后特别能影响模型，观察其 attention 的分布，cls 的 attention 都集中在 query 和 title 中相同的 term 上，似乎是在对底层 term 匹配 head 抽取到的特征进一步的提取，将这种匹配特征保存到 cls 中(cls 最后一层会用于分类)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-eabcfa5e4f4cce8da54f5ac32a49ba9e_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;在没有做任何 head-mask 时, 可以看到 cls 的 attention 主要分配给和 query 和 title 中的共同 term &amp;ldquo;紫熨斗&amp;rdquo;，而 mask 掉 5 个 2~4 层的 head(具有 term 匹配功能)时, 第 10 层的 cls 注意力分配明显被改变，分散到更多的 term 中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-f02a2af3967dda0e4770082473040881_1440w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个 case 展示了高层 attention-head 是如何依赖底层的 head 的特征，进一步提取底层的特征并最后作为重要特征用于 query-title 分类。&lt;/p&gt;
&lt;h3 id=&#34;结语&#34;&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;本文主要探讨了在 query-title 分类场景下,bert 模型的可解释性。主要从 attention-head 角度入手，发现 attention 一方面非常的冗余，去掉一部分 head 其实不会对模型造成多大的影响。另外一方面有一些 head 却非常的能影响模型，即使去掉一个都能让模型表现变差不少。同时发现不同的 head 实际上有特定的功能，比如底层的 head 负责对输入进行特征提取，如分词、提取输入的语序关系、提取 query 和 title(也就是上下句)中相同的 term 信息等。这部分底层的 head 提取到的特征会通过残差连接送到高层的 head 中，高层 head 会对这部分特征信息进行进一步融合，最终作为分类特征输入到分类器中。&lt;/p&gt;
&lt;p&gt;本文重点讨论了哪些 head 是对模型有正面作用，也就是去掉这些 head 后模型表现变差了。但是如果知道了哪些 head 为什么对模型有负面作用，也就是为什么去掉某些 head 模型效果会更好，实际上对于我们有更多的指导作用。这部分信息能够帮助我们在模型加速，提升模型表现上少走弯路。&lt;/p&gt;
&lt;h3 id=&#34;参考文献&#34;&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;[1] Clark K, Khandelwal U, Levy O, et al. What Does BERT Look At? An Analysis of BERT&amp;rsquo;s Attention[J]. arXiv preprint arXiv:1906.04341, 2019.&lt;/p&gt;
&lt;p&gt;[2] Vig J. A multiscale visualization of attention in the transformer model[J]. arXiv preprint arXiv:1906.05714, 2019.&lt;/p&gt;
&lt;p&gt;作者：vincehou，腾讯 TEG 应用研究员&lt;/p&gt;
&lt;p&gt;更多干货尽在&lt;a href=&#34;https://www.zhihu.com/org/teng-xun-ji-zhu-gong-cheng&#34;&gt;腾讯技术&lt;/a&gt;，官方QQ交流群已建立，交流讨论可加：957411539。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Tensorflow</title>
      <link>http://csyezheng.github.io/post/specialization/artificial-intelligence/deep-learning/tensorflow/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/specialization/artificial-intelligence/deep-learning/tensorflow/</guid>
      
        <description>&lt;h1 id=&#34;tensorflow&#34;&gt;TensorFlow&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/0083FLjsgy1gg7bk10ef7j30qo0f03zd.jpg&#34; alt=&#34;https://blog.tensorflow.org/2019/09/tensorflow-20-is-now-available.html&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;install-tensorflow-2&#34;&gt;Install TensorFlow 2&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Version&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Python version&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Compiler&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Build tools&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tensorflow-2.2.0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3.5-3.8&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;GCC 7.3.1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Bazel 2.0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tensorflow-2.1.0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2.7, 3.5-3.7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;GCC 7.3.1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Bazel 0.27.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tensorflow-2.0.0&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2.7, 3.3-3.7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;GCC 7.3.1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Bazel 0.26.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -U cuda-10.1.243-2-x86_64.pkg.tar.xz
sudo pacman -U cudnn-7.6.5.32-2-x86_64.pkg.tar.xz
pip install tensorflow-gpu
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;data-input-pipelines&#34;&gt;Data input pipelines&lt;/h2&gt;
&lt;h2 id=&#34;keras&#34;&gt;Keras&lt;/h2&gt;
&lt;h3 id=&#34;sequential-api&#34;&gt;Sequential API&lt;/h3&gt;
&lt;h4 id=&#34;when-to-use-a-sequential-model&#34;&gt;When to use a Sequential model&lt;/h4&gt;
&lt;p&gt;A Sequential model is appropriate for &lt;strong&gt;a plain stack of layers&lt;/strong&gt; where each layer has &lt;strong&gt;exactly one input tensor and one output tensor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A Sequential model is &lt;strong&gt;not appropriate&lt;/strong&gt; when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your model has multiple inputs or multiple outputs&lt;/li&gt;
&lt;li&gt;Any of your layers has multiple inputs or multiple outputs&lt;/li&gt;
&lt;li&gt;You need to do layer sharing&lt;/li&gt;
&lt;li&gt;You want non-linear topology (e.g. a residual connection, a multi-branch model)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Sequential constructor accepts a &lt;code&gt;name&lt;/code&gt; argument, just like any layer or model in Keras. This is useful to annotate TensorBoard graphs with semantically meaningful names.&lt;/p&gt;
&lt;h4 id=&#34;specifying-the-input-shape-in-advance&#34;&gt;Specifying the input shape in advance&lt;/h4&gt;
&lt;p&gt;it can be very useful when building a Sequential model incrementally to be able to display the summary of the model so far, including the current output shape. In this case, you should start your model by passing an &lt;code&gt;Input&lt;/code&gt; object to your model, so that it knows its input shape from the start.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;model = keras.Sequential()
model.add(keras.Input(shape=(4,)))
model.add(layers.Dense(2, activation=&amp;quot;relu&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A simple alternative is to just pass an &lt;code&gt;input_shape&lt;/code&gt; argument to your first layer.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;model = keras.Sequential()
model.add(layers.Dense(2, activation=&amp;quot;relu&amp;quot;, input_shape=(4,)))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In general, it&amp;rsquo;s a recommended &lt;strong&gt;best practice&lt;/strong&gt; to always specify the input shape of a Sequential model in advance if you know what it is.&lt;/p&gt;
&lt;h4 id=&#34;a-common-debugging-workflow-add--summary&#34;&gt;A common debugging workflow: &lt;code&gt;add()&lt;/code&gt; + &lt;code&gt;summary()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;When building a new Sequential architecture, it&amp;rsquo;s useful to incrementally stack layers with &lt;code&gt;add()&lt;/code&gt; and frequently print model summaries.&lt;/p&gt;
&lt;h4 id=&#34;feature-extraction-with-a-sequential-model&#34;&gt;Feature extraction with a Sequential model&lt;/h4&gt;
&lt;p&gt;quickly creating a model that extracts the outputs of all intermediate layers in a Sequential model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;initial_model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; keras&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Sequential(
    [
        keras&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Input(shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)),
        layers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, strides&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, activation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relu&amp;#34;&lt;/span&gt;),
        layers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, activation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relu&amp;#34;&lt;/span&gt;),
        &lt;span style=&#34;color:#75715e&#34;&gt;# layers.Conv2D(32, 3, activation=&amp;#34;relu&amp;#34;, name=&amp;#34;my_intermediate_layer&amp;#34;),&lt;/span&gt;
        layers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, activation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relu&amp;#34;&lt;/span&gt;),
    ]
)
feature_extractor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; keras&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model(
    inputs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;initial_model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;inputs,
    outputs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[layer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;output &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; layer &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; initial_model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;layers],
    &lt;span style=&#34;color:#75715e&#34;&gt;# only extract features from one layer:&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# outputs=initial_model.get_layer(name=&amp;#34;my_intermediate_layer&amp;#34;).output,&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Call feature extractor on test input.&lt;/span&gt;
x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
features &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; feature_extractor(x)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;transfer-learning-with-a-sequential-model&#34;&gt;Transfer learning with a Sequential model&lt;/h4&gt;
&lt;h3 id=&#34;keras-functional-api&#34;&gt;Keras functional API&lt;/h3&gt;
&lt;h3 id=&#34;train_and_evaluate&#34;&gt;train_and_evaluate&lt;/h3&gt;
&lt;h3 id=&#34;write-custom-layers-and-models&#34;&gt;Write custom layers and models&lt;/h3&gt;
&lt;h3 id=&#34;save-and-serialize-models&#34;&gt;Save and serialize models&lt;/h3&gt;
&lt;h3 id=&#34;customizing-what-happens-in-fit&#34;&gt;Customizing what happens in fit&lt;/h3&gt;
&lt;h3 id=&#34;writing-a-training-loop-from-scratch&#34;&gt;Writing a training loop from scratch&lt;/h3&gt;
&lt;h3 id=&#34;keras-recurrent-neural-networks&#34;&gt;Keras Recurrent Neural Networks&lt;/h3&gt;
&lt;h3 id=&#34;masking-and-padding&#34;&gt;Masking and padding&lt;/h3&gt;
&lt;h3 id=&#34;write-custom-callbacks&#34;&gt;Write custom callbacks&lt;/h3&gt;
&lt;h3 id=&#34;transfer-learning&#34;&gt;Transfer learning&lt;/h3&gt;
&lt;h2 id=&#34;estimators&#34;&gt;Estimators&lt;/h2&gt;
&lt;h2 id=&#34;save-a-model&#34;&gt;Save a model&lt;/h2&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;[&lt;strong&gt;TensorFlow 2.0 is now available!&lt;/strong&gt;]([https://blog.tensorflow.org/2019/09/tensorflow-20-is-now-available.html#:~:text=Today%2C%20we&amp;rsquo;re%20delighted%20to,TensorFlow%202.0%20is%20now%20available!&amp;amp;text=TensorFlow%202.0%20provides%20a%20comprehensive,build%20scalable%20ML%2Dpowered%20applications.](&lt;a href=&#34;https://blog.tensorflow.org/2019/09/tensorflow-20-is-now-available.html#:~:text=Today%2C&#34;&gt;https://blog.tensorflow.org/2019/09/tensorflow-20-is-now-available.html#:~:text=Today%2C&lt;/a&gt; we&amp;rsquo;re delighted to,TensorFlow 2.0 is now available!&amp;amp;text=TensorFlow 2.0 provides a comprehensive,build scalable ML-powered applications.))&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://afteracademy.com/blog/getting-started-with-tensorflow-2-tutorial-step-by-step-guide&#34;&gt;&lt;strong&gt;Getting started with Tensorflow 2.0 Tutorial&lt;/strong&gt; &lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
  </channel>
</rss>
