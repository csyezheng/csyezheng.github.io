<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mybatis on Ye Zheng&#39;s Blog</title>
    <link>http://csyezheng.github.io/tags/mybatis/</link>
    <description>Recent content in Mybatis on Ye Zheng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://csyezheng.github.io/tags/mybatis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mybatis Spring Boot</title>
      <link>http://csyezheng.github.io/post/back-end/mybatis-spring-boot/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://csyezheng.github.io/post/back-end/mybatis-spring-boot/</guid>
      <description>Creating a project spring init -d=web --build=maven mysite Declare Dependencies &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis.spring.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-spring-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; MyBatis-Spring-Boot-Starter will:
 Autodetect an existing DataSource Will create and register an instance of a SqlSessionFactory passing that DataSource as an input using the SqlSessionFactoryBean Will create and register an instance of a SqlSessionTemplate got out of the SqlSessionFactory Auto-scan your mappers, link them to the SqlSessionTemplate and register them to Spring context so they can be injected into your beans  MyBatis integration with Spring Boot spring init -d=web,mybatis,h2 --build=maven mysite Create sql files vim src/main/resources/schema.</description>
    </item>
    
  </channel>
</rss>